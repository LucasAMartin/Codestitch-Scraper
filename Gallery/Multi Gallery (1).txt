<!-- ============================================ -->
<!--                   Gallery                    -->
<!-- ============================================ -->

<section id="gallery-453">
    <div class="cs-container">
        <div class="cs-content">
            <div class="cs-flex">
                <span class="cs-topper">Portfolio</span>
                <h2 class="cs-title">Our Gallery</h2>
            </div>
            <div class="cs-button-group">
                <!--When adding extra galleries, copy and paste the button and make data-filter equal to four, then five, etc. Do the same for the corresponding gallery and it's data attribute-->
                <button class="cs-button" data-filter="one">
                    Renovations
                </button>
                <button class="cs-button" data-filter="two">
                    Sod
                </button>
                <button class="cs-button" data-filter="three">
                    Fencing
                </button>
            </div>
        </div>
        <!--Gallery 1-->
        <div class="cs-gallery" data-category="one">
            <!--Picture 1-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 2-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 3-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 4-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
        </div>
        <!--Gallery 2-->
        <div class="cs-gallery cs-hidden" data-category="two">
            <!--Picture 1-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 2-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 3-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 4-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves3.jpg" alt="gallery" width="305" height="400">
            </picture>
        </div>
        <!--Gallery 3-->
        <div class="cs-gallery cs-hidden" data-category="three">
            <!--Picture 1-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 2-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 3-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
            <!--Picture 4-->
            <picture class="cs-image">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/leaves2.jpg" alt="gallery" width="305" height="400">
            </picture>
        </div>
    </div>
</section>
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #229521;
    --primaryLight: #64b564;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #gallery-453 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    /* centers the inline-block button */
    text-align: center;
    padding: var(--sectionPadding);
  }
  #gallery-453 .cs-container {
    width: 100%;
    /* changes to 1280px at tablet */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
    position: relative;
  }
  #gallery-453 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #gallery-453 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #gallery-453 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #gallery-453 .cs-button-group {
    width: 100%;
    max-width: 37.5rem;
    margin: 0;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
    row-gap: 0.5rem;
    column-gap: 1.5rem;
  }
  #gallery-453 .cs-button {
    font-size: 1rem;
    line-height: 1.5em;
    padding: 0 0 0 1rem;
    color: var(--bodyTextColor);
    background-color: transparent;
    border: none;
    position: relative;
    transition: color .3s;
  }
  #gallery-453 .cs-button:before {
    content: '';
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background: var(--primary);
    /* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
    opacity: 0;
    /* prevents mouse from interacting with it */
    pointer-events: none;
    position: absolute;
    display: block;
    top: 50%;
    /* start -20px left of the button */
    left: -1.25rem;
    transform: translateY(-50%);
    /* transition to and from the active class styles on hover*/
    transition: opacity .3s, left .3s;
  }
  #gallery-453 .cs-button:hover {
    color: var(--primary);
    cursor: pointer;
  }
  #gallery-453 .cs-button:hover:before {
    left: 0;
    opacity: 1;
  }
  #gallery-453 .cs-button.cs-active {
    /* when the button is active, add these styles to the button and its pseudo */
    font-weight: 700;
    color: var(--primary);
  }
  #gallery-453 .cs-button.cs-active:before {
    /* animate to these values when the cs-active class is added to the button and on hover */
    left: 0;
    opacity: 1;
  }
  #gallery-453 .cs-gallery {
    width: 100%;
    padding: 0;
    margin: 0;
    /* 48px - 64px */
    margin-bottom: clamp(3rem, 3vw, 4rem);
    opacity: 1;
    visibility: visible;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    left: 0;
    /* 16px - 20px */
    gap: clamp(1rem, 1vw, 1.25rem);
    transition: transform .7s, opacity .3s, visibility .5s, top .3s, left .3s;
    /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
    transform-origin: left top;
  }
  #gallery-453 .cs-gallery.cs-hidden {
    /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
    visibility: hidden;
    /* prevents the mouse from interacting with it */
    pointer-events: none;
    /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
    opacity: 0;
    /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that posiiton when it animates */
    bottom: 0;
    left: 0;
    position: absolute;
    /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
    transform: scaleY(0) scaleX(0);
  }
  #gallery-453 .cs-gallery.cs-hidden .cs-image {
    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
    transform: translateY(2.1875rem);
    opacity: 0;
  }
  #gallery-453 .cs-image {
    border-radius: 0.25rem;
    width: clamp(47%, 42.5vw, 48.5%);
    /* changes at tablet */
    aspect-ratio: 0.72985782;
    /* clips the image corners */
    overflow: hidden;
    display: block;
    position: relative;
    /* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
    transform: translateY(0rem);
    opacity: 1;
    transition: opacity .6s, transform .6s;
  }
  #gallery-453 .cs-image:nth-of-type(1) {
    /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
    transition-delay: .15s;
  }
  #gallery-453 .cs-image:nth-of-type(2) {
    transition-delay: .3s;
  }
  #gallery-453 .cs-image:nth-of-type(3) {
    transition-delay: .45s;
  }
  #gallery-453 .cs-image:nth-of-type(4) {
    transition-delay: .6s;
  }
  #gallery-453 .cs-image:nth-of-type(5) {
    transition-delay: .75s;
  }
  #gallery-453 .cs-image:nth-of-type(6) {
    transition-delay: .9s;
  }
  #gallery-453 .cs-image:nth-of-type(7) {
    transition-delay: 1.05s;
  }
  #gallery-453 .cs-image:nth-of-type(8) {
    transition-delay: 1.20s;
  }
  #gallery-453 .cs-image img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes it act like a background image */
    object-fit: cover;
  }
}
/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
  #gallery-453 .cs-container {
    max-width: 80rem;
  }
  #gallery-453 .cs-content {
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }
  #gallery-453 .cs-flex {
    width: 50%;
  }
  #gallery-453 .cs-title {
    margin: 0;
  }
  #gallery-453 .cs-button-group {
    width: auto;
  }
  #gallery-453 .cs-gallery {
    justify-content: space-between;
  }
  #gallery-453 .cs-image {
    /* 171px - 305px */
    width: clamp(10.6875rem, 23.3%, 19.0625rem);
    aspect-ratio: 0.71529412;
  }
}
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #229521;
    --primaryLight: #64b564;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #gallery-453 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    /* centers the inline-block button */
    text-align: center;
    padding: var(--sectionPadding);
  }
  #gallery-453 .cs-container {
    width: 100%;
    /* changes to 1280px at tablet */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
    position: relative;
  }
  #gallery-453 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #gallery-453 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #gallery-453 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #gallery-453 .cs-button-group {
    width: 100%;
    max-width: 37.5rem;
    margin: 0;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: wrap;
    row-gap: 0.5rem;
    column-gap: 1.5rem;
  }
  #gallery-453 .cs-button {
    font-size: 1rem;
    line-height: 1.5em;
    padding: 0 0 0 1rem;
    color: var(--bodyTextColor);
    background-color: transparent;
    border: none;
    position: relative;
    transition: color .3s;
  }
  #gallery-453 .cs-button:before {
    content: '';
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background: var(--primary);
    /* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
    opacity: 0;
    /* prevents mouse from interacting with it */
    pointer-events: none;
    position: absolute;
    display: block;
    top: 50%;
    /* start -20px left of the button */
    left: -1.25rem;
    transform: translateY(-50%);
    /* transition to and from the active class styles on hover*/
    transition: opacity .3s, left .3s;
  }
  #gallery-453 .cs-button:hover {
    color: var(--primary);
    cursor: pointer;
  }
  #gallery-453 .cs-button:hover:before {
    left: 0;
    opacity: 1;
  }
  #gallery-453 .cs-button.cs-active {
    /* when the button is active, add these styles to the button and its pseudo */
    font-weight: 700;
    color: var(--primary);
  }
  #gallery-453 .cs-button.cs-active:before {
    /* animate to these values when the cs-active class is added to the button and on hover */
    left: 0;
    opacity: 1;
  }
  #gallery-453 .cs-gallery {
    width: 100%;
    padding: 0;
    margin: 0;
    /* 48px - 64px */
    margin-bottom: clamp(3rem, 3vw, 4rem);
    opacity: 1;
    visibility: visible;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    left: 0;
    /* 16px - 20px */
    gap: clamp(1rem, 1vw, 1.25rem);
    transition: transform .7s, opacity .3s, visibility .5s, top .3s, left .3s;
    /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
    transform-origin: left top;
  }
  #gallery-453 .cs-gallery.cs-hidden {
    /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
    visibility: hidden;
    /* prevents the mouse from interacting with it */
    pointer-events: none;
    /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
    opacity: 0;
    /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that posiiton when it animates */
    bottom: 0;
    left: 0;
    position: absolute;
    /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
    transform: scaleY(0) scaleX(0);
  }
  #gallery-453 .cs-gallery.cs-hidden .cs-image {
    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
    transform: translateY(2.1875rem);
    opacity: 0;
  }
  #gallery-453 .cs-image {
    border-radius: 0.25rem;
    width: clamp(47%, 42.5vw, 48.5%);
    /* changes at tablet */
    aspect-ratio: 0.72985782;
    /* clips the image corners */
    overflow: hidden;
    display: block;
    position: relative;
    /* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
    transform: translateY(0rem);
    opacity: 1;
    transition: opacity .6s, transform .6s;
  }
  #gallery-453 .cs-image:nth-of-type(1) {
    /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
    transition-delay: .15s;
  }
  #gallery-453 .cs-image:nth-of-type(2) {
    transition-delay: .3s;
  }
  #gallery-453 .cs-image:nth-of-type(3) {
    transition-delay: .45s;
  }
  #gallery-453 .cs-image:nth-of-type(4) {
    transition-delay: .6s;
  }
  #gallery-453 .cs-image:nth-of-type(5) {
    transition-delay: .75s;
  }
  #gallery-453 .cs-image:nth-of-type(6) {
    transition-delay: .9s;
  }
  #gallery-453 .cs-image:nth-of-type(7) {
    transition-delay: 1.05s;
  }
  #gallery-453 .cs-image:nth-of-type(8) {
    transition-delay: 1.20s;
  }
  #gallery-453 .cs-image img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes it act like a background image */
    object-fit: cover;
  }
}
/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
  #gallery-453 .cs-container {
    max-width: 80rem;
  }
  #gallery-453 .cs-content {
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-end;
  }
  #gallery-453 .cs-flex {
    width: 50%;
  }
  #gallery-453 .cs-title {
    margin: 0;
  }
  #gallery-453 .cs-button-group {
    width: auto;
  }
  #gallery-453 .cs-gallery {
    justify-content: space-between;
  }
  #gallery-453 .cs-image {
    /* 171px - 305px */
    width: clamp(10.6875rem, 23.3%, 19.0625rem);
    aspect-ratio: 0.71529412;
  }
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode #gallery-453 .cs-topper {
    color: var(--primaryLight);
  }
  body.dark-mode #gallery-453 .cs-title,
  body.dark-mode #gallery-453 .cs-text,
  body.dark-mode #gallery-453 .cs-button {
    color: var(--bodyTextColorWhite);
  }
  body.dark-mode #gallery-453 .cs-title.cs-active,
  body.dark-mode #gallery-453 .cs-text.cs-active,
  body.dark-mode #gallery-453 .cs-button.cs-active {
    color: var(--primaryLight);
  }
}
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #229521;
        --primaryLight: #64b564;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #gallery-453 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        /* centers the inline-block button */
        text-align: center;
        padding: var(--sectionPadding);
    
        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-button-group {
            width: 100%;
            max-width: (600/16rem);
            margin: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-wrap: wrap;
            row-gap: (8/16rem);
            column-gap: (24/16rem);
        }

        .cs-button {
            font-size: (16/16rem);
            line-height: 1.5em;
            padding: 0 0 0 (16/16rem);
            color: var(--bodyTextColor);
            background-color: transparent;
            border: none;
            position: relative;
            transition: color .3s;

            &:before {
                content: '';
                width: (8/16rem);
                height: (8/16rem);
                border-radius: 50%;
                background: var(--primary);
                /* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
                opacity: 0;
                /* prevents mouse from interacting with it */
                pointer-events: none;
                position: absolute;
                display: block;
                top: 50%;
                /* start -20px left of the button */
                left: (-20/16rem);
                transform: translateY(-50%);
                /* transition to and from the active class styles on hover*/
                transition: opacity .3s, left .3s;
            }

            &:hover {
                color: var(--primary);
                cursor: pointer;
                &:before {
                    left: 0;
                    opacity: 1;
                }
            }

            &.cs-active {
                /* when the button is active, add these styles to the button and its pseudo */
                font-weight: 700;
                color: var(--primary);

                &:before {
                    /* animate to these values when the cs-active class is added to the button and on hover */
                    left: 0;
                    opacity: 1;
                }
            }
        }

        .cs-gallery {
            width: 100%;
            padding: 0;
            margin: 0;
            /* 48px - 64px */
            margin-bottom: clamp(3rem, 3vw, 4rem);
            opacity: 1;
            visibility: visible;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            left: 0;
            /* 16px - 20px */
            gap: clamp(1rem, 1vw, 1.25rem);
            transition: transform .7s, opacity .3s, visibility .5s, top .3s, left .3s;
            /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
            transform-origin: left top;

            &.cs-hidden {
                position: absolute;
                /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
                visibility: hidden;
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
                opacity: 0;
                /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that posiiton when it animates */
                bottom: 0;
                left: 0;
                position: absolute;
                /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
                transform: scaleY(0) scaleX(0);

                .cs-image {
                    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
                    transform: translateY(35/16rem);
                    opacity: 0;
                }
            }
        }

        .cs-image {
            border-radius: (4/16rem);
            width: clamp(47%, 42.5vw, 48.5%);
            /* changes at tablet */
            aspect-ratio: 154/211;
            /* clips the image corners */
            overflow: hidden;
            display: block;
            position: relative;
            /* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
            transform: translateY(0/16rem);
            opacity: 1;
            transition: opacity .6s, transform .6s;

            &:nth-of-type(1) {
                /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
                transition-delay: .15s;
            }
            &:nth-of-type(2) {
                transition-delay: .3s;
            }
            &:nth-of-type(3) {
                transition-delay: .45s;
            }
            &:nth-of-type(4) {
                transition-delay: .6s;
            }
            &:nth-of-type(5) {
                transition-delay: .75s;
            }
            &:nth-of-type(6) {
                transition-delay: .9s;
            }
            &:nth-of-type(7) {
                transition-delay: 1.05s;
            }
            &:nth-of-type(8) {
                transition-delay: 1.20s;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes it act like a background image */
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
    #gallery-453 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-end;
        }

        .cs-flex {
            width: 50%;
        }

        .cs-title {
            margin: 0;
        }

        .cs-button-group {
            width: auto;
        }

        .cs-gallery {
            justify-content: space-between;
        }
        
        .cs-image {
            /* 171px - 305px */
            width: ~"clamp(10.6875rem, 23.3%, 19.0625rem)";
            aspect-ratio: 304/425;
        }
    }
}
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #229521;
        --primaryLight: #64b564;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #gallery-453 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        /* centers the inline-block button */
        text-align: center;
        padding: var(--sectionPadding);
    
        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            position: relative;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-button-group {
            width: 100%;
            max-width: (600/16rem);
            margin: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            flex-wrap: wrap;
            row-gap: (8/16rem);
            column-gap: (24/16rem);
        }

        .cs-button {
            font-size: (16/16rem);
            line-height: 1.5em;
            padding: 0 0 0 (16/16rem);
            color: var(--bodyTextColor);
            background-color: transparent;
            border: none;
            position: relative;
            transition: color .3s;

            &:before {
                content: '';
                width: (8/16rem);
                height: (8/16rem);
                border-radius: 50%;
                background: var(--primary);
                /* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
                opacity: 0;
                /* prevents mouse from interacting with it */
                pointer-events: none;
                position: absolute;
                display: block;
                top: 50%;
                /* start -20px left of the button */
                left: (-20/16rem);
                transform: translateY(-50%);
                /* transition to and from the active class styles on hover*/
                transition: opacity .3s, left .3s;
            }

            &:hover {
                color: var(--primary);
                cursor: pointer;
                &:before {
                    left: 0;
                    opacity: 1;
                }
            }

            &.cs-active {
                /* when the button is active, add these styles to the button and its pseudo */
                font-weight: 700;
                color: var(--primary);

                &:before {
                    /* animate to these values when the cs-active class is added to the button and on hover */
                    left: 0;
                    opacity: 1;
                }
            }
        }

        .cs-gallery {
            width: 100%;
            padding: 0;
            margin: 0;
            /* 48px - 64px */
            margin-bottom: clamp(3rem, 3vw, 4rem);
            opacity: 1;
            visibility: visible;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            left: 0;
            /* 16px - 20px */
            gap: clamp(1rem, 1vw, 1.25rem);
            transition: transform .7s, opacity .3s, visibility .5s, top .3s, left .3s;
            /* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
            transform-origin: left top;

            &.cs-hidden {
                position: absolute;
                /* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
                visibility: hidden;
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                /* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
                opacity: 0;
                /* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that posiiton when it animates */
                bottom: 0;
                left: 0;
                position: absolute;
                /* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
                transform: scaleY(0) scaleX(0);

                .cs-image {
                    /* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
                    transform: translateY(35/16rem);
                    opacity: 0;
                }
            }
        }

        .cs-image {
            border-radius: (4/16rem);
            width: clamp(47%, 42.5vw, 48.5%);
            /* changes at tablet */
            aspect-ratio: 154/211;
            /* clips the image corners */
            overflow: hidden;
            display: block;
            position: relative;
            /* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
            transform: translateY(0/16rem);
            opacity: 1;
            transition: opacity .6s, transform .6s;

            &:nth-of-type(1) {
                /* these delays stagger the reveal of each image so they all go one after the other and not all at once */
                transition-delay: .15s;
            }
            &:nth-of-type(2) {
                transition-delay: .3s;
            }
            &:nth-of-type(3) {
                transition-delay: .45s;
            }
            &:nth-of-type(4) {
                transition-delay: .6s;
            }
            &:nth-of-type(5) {
                transition-delay: .75s;
            }
            &:nth-of-type(6) {
                transition-delay: .9s;
            }
            &:nth-of-type(7) {
                transition-delay: 1.05s;
            }
            &:nth-of-type(8) {
                transition-delay: 1.20s;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes it act like a background image */
                object-fit: cover;
            }
        }
    }
}

/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
    #gallery-453 {
        .cs-container {
            max-width: (1280/16rem);
        }

        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: flex-end;
        }

        .cs-flex {
            width: 50%;
        }

        .cs-title {
            margin: 0;
        }

        .cs-button-group {
            width: auto;
        }

        .cs-gallery {
            justify-content: space-between;
        }
        
        .cs-image {
            /* 171px - 305px */
            width: ~"clamp(10.6875rem, 23.3%, 19.0625rem)";
            aspect-ratio: 304/425;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #gallery-453 {
            .cs-topper {
                color: var(--primaryLight);
            }
            .cs-title, .cs-text, .cs-button {
                color: var(--bodyTextColorWhite);

                &.cs-active {
                    color: var(--primaryLight);
                }
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #229521;
		--primaryLight: #64b564;
		--secondary: #ffba43;
		--secondaryLight: #ffba43;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#gallery-453 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		/* centers the inline-block button */
		text-align: center;
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			/* changes to 1280px at tablet */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
			position: relative;
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: left;
			width: 100%;
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: flex-start;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-button-group {
			width: 100%;
			max-width: calc(600 / 16 * 1rem);
			margin: 0;
			display: flex;
			justify-content: flex-start;
			align-items: center;
			flex-wrap: wrap;
			row-gap: calc(8 / 16 * 1rem);
			column-gap: calc(24 / 16 * 1rem);
		}

		.cs-button {
			font-size: calc(16 / 16 * 1rem);
			line-height: 1.5em;
			padding: 0 0 0 calc(16 / 16 * 1rem);
			color: var(--bodyTextColor);
			background-color: transparent;
			border: none;
			position: relative;
			transition: color 0.3s;

			&:before {
				content: '';
				width: calc(8 / 16 * 1rem);
				height: calc(8 / 16 * 1rem);
				border-radius: 50%;
				background: var(--primary);
				/* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
				opacity: 0;
				/* prevents mouse from interacting with it */
				pointer-events: none;
				position: absolute;
				display: block;
				top: 50%;
				/* start -20px left of the button */
				left: calc(-20 / 16 * 1rem);
				transform: translateY(-50%);
				/* transition to and from the active class styles on hover*/
				transition: opacity 0.3s, left 0.3s;
			}

			&:hover {
				color: var(--primary);
				cursor: pointer;
				&:before {
					left: 0;
					opacity: 1;
				}
			}

			&.cs-active {
				/* when the button is active, add these styles to the button and its pseudo */
				font-weight: 700;
				color: var(--primary);

				&:before {
					/* animate to these values when the cs-active class is added to the button and on hover */
					left: 0;
					opacity: 1;
				}
			}
		}

		.cs-gallery {
			width: 100%;
			padding: 0;
			margin: 0;
			/* 48px - 64px */
			margin-bottom: clamp(3rem, 3vw, 4rem);
			opacity: 1;
			visibility: visible;
			position: relative;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-wrap: wrap;
			left: 0;
			/* 16px - 20px */
			gap: clamp(1rem, 1vw, 1.25rem);
			transition: transform 0.7s, opacity 0.3s, visibility 0.5s, top 0.3s, left 0.3s;
			/* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
			transform-origin: left top;

			&.cs-hidden {
				position: absolute;
				/* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
				visibility: hidden;
				/* prevents the mouse from interacting with it */
				pointer-events: none;
				/* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
				opacity: 0;
				/* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that position when it animates */
				bottom: 0;
				left: 0;
				position: absolute;
				/* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
				transform: scaleY(0) scaleX(0);

				.cs-image {
					/* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
					transform: translateY(calc(35 / 16 * 1rem));
					opacity: 0;
				}
			}
		}

		.cs-image {
			border-radius: calc(4 / 16 * 1rem);
			width: clamp(47%, 42.5vw, 48.5%);
			/* changes at tablet */
			aspect-ratio: 154/211;
			/* clips the image corners */
			overflow: hidden;
			display: block;
			position: relative;
			/* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
			transform: translateY(calc(0 / 16 * 1rem));
			opacity: 1;
			transition: opacity 0.6s, transform 0.6s;

			&:nth-of-type(1) {
				/* these delays stagger the reveal of each image so they all go one after the other and not all at once */
				transition-delay: 0.15s;
			}
			&:nth-of-type(2) {
				transition-delay: 0.3s;
			}
			&:nth-of-type(3) {
				transition-delay: 0.45s;
			}
			&:nth-of-type(4) {
				transition-delay: 0.6s;
			}
			&:nth-of-type(5) {
				transition-delay: 0.75s;
			}
			&:nth-of-type(6) {
				transition-delay: 0.9s;
			}
			&:nth-of-type(7) {
				transition-delay: 1.05s;
			}
			&:nth-of-type(8) {
				transition-delay: 1.2s;
			}

			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				/* makes it act like a background image */
				object-fit: cover;
			}
		}
	}
}

/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
	#gallery-453 {
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
		}

		.cs-content {
			flex-direction: row;
			justify-content: space-between;
			align-items: flex-end;
		}

		.cs-flex {
			width: 50%;
		}

		.cs-title {
			margin: 0;
		}

		.cs-button-group {
			width: auto;
		}

		.cs-gallery {
			justify-content: space-between;
		}

		.cs-image {
			/* 171px - 305px */
			width: clamp(10.6875rem, 23.3%, 19.0625rem);
			aspect-ratio: 304/425;
		}
	}
}
                                
/*-- -------------------------- -->
<---          Gallery           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #229521;
		--primaryLight: #64b564;
		--secondary: #ffba43;
		--secondaryLight: #ffba43;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#gallery-453 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		/* centers the inline-block button */
		text-align: center;
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			/* changes to 1280px at tablet */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
			position: relative;
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: left;
			width: 100%;
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: flex-start;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-button-group {
			width: 100%;
			max-width: calc(600 / 16 * 1rem);
			margin: 0;
			display: flex;
			justify-content: flex-start;
			align-items: center;
			flex-wrap: wrap;
			row-gap: calc(8 / 16 * 1rem);
			column-gap: calc(24 / 16 * 1rem);
		}

		.cs-button {
			font-size: calc(16 / 16 * 1rem);
			line-height: 1.5em;
			padding: 0 0 0 calc(16 / 16 * 1rem);
			color: var(--bodyTextColor);
			background-color: transparent;
			border: none;
			position: relative;
			transition: color 0.3s;

			&:before {
				content: '';
				width: calc(8 / 16 * 1rem);
				height: calc(8 / 16 * 1rem);
				border-radius: 50%;
				background: var(--primary);
				/* starting value, this will animate to 1 when the button is hovered, and when the active class is on it */
				opacity: 0;
				/* prevents mouse from interacting with it */
				pointer-events: none;
				position: absolute;
				display: block;
				top: 50%;
				/* start -20px left of the button */
				left: calc(-20 / 16 * 1rem);
				transform: translateY(-50%);
				/* transition to and from the active class styles on hover*/
				transition: opacity 0.3s, left 0.3s;
			}

			&:hover {
				color: var(--primary);
				cursor: pointer;
				&:before {
					left: 0;
					opacity: 1;
				}
			}

			&.cs-active {
				/* when the button is active, add these styles to the button and its pseudo */
				font-weight: 700;
				color: var(--primary);

				&:before {
					/* animate to these values when the cs-active class is added to the button and on hover */
					left: 0;
					opacity: 1;
				}
			}
		}

		.cs-gallery {
			width: 100%;
			padding: 0;
			margin: 0;
			/* 48px - 64px */
			margin-bottom: clamp(3rem, 3vw, 4rem);
			opacity: 1;
			visibility: visible;
			position: relative;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-wrap: wrap;
			left: 0;
			/* 16px - 20px */
			gap: clamp(1rem, 1vw, 1.25rem);
			transition: transform 0.7s, opacity 0.3s, visibility 0.5s, top 0.3s, left 0.3s;
			/* makes the transform scaling origin the top left corner, dictates the direction by which the scale transforms animate towards */
			transform-origin: left top;

			&.cs-hidden {
				position: absolute;
				/* by using visibility:hidden instead of display:none, we can see the animations from the opacity and transforms, display:none won't render animations. */
				visibility: hidden;
				/* prevents the mouse from interacting with it */
				pointer-events: none;
				/* hidden galleries have a 0 opacity, and we animate the opacity to 1 when they become active */
				opacity: 0;
				/* this top and left value help control the animation, by setting it to position absolute and left 0, the gallery won't fly off screen to the left, it will stop its position to be at the left edge of the .cs-container (left: 0). Same for the bottom:0 value, the gallery won't go past that position when it animates */
				bottom: 0;
				left: 0;
				position: absolute;
				/* prevents the hidden galleries from overflowing the section, and makes a nice animations to transition to and from */
				transform: scaleY(0) scaleX(0);

				.cs-image {
					/* when gallery is hidden, add these styles to the cs-image to animate from when cs-hidden is removed from the .cs-gallery */
					transform: translateY(calc(35 / 16 * 1rem));
					opacity: 0;
				}
			}
		}

		.cs-image {
			border-radius: calc(4 / 16 * 1rem);
			width: clamp(47%, 42.5vw, 48.5%);
			/* changes at tablet */
			aspect-ratio: 154/211;
			/* clips the image corners */
			overflow: hidden;
			display: block;
			position: relative;
			/* when .cs-hidden is removed from the .cs-gallery, reset these values and animate from their hidden styles */
			transform: translateY(calc(0 / 16 * 1rem));
			opacity: 1;
			transition: opacity 0.6s, transform 0.6s;

			&:nth-of-type(1) {
				/* these delays stagger the reveal of each image so they all go one after the other and not all at once */
				transition-delay: 0.15s;
			}
			&:nth-of-type(2) {
				transition-delay: 0.3s;
			}
			&:nth-of-type(3) {
				transition-delay: 0.45s;
			}
			&:nth-of-type(4) {
				transition-delay: 0.6s;
			}
			&:nth-of-type(5) {
				transition-delay: 0.75s;
			}
			&:nth-of-type(6) {
				transition-delay: 0.9s;
			}
			&:nth-of-type(7) {
				transition-delay: 1.05s;
			}
			&:nth-of-type(8) {
				transition-delay: 1.2s;
			}

			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				/* makes it act like a background image */
				object-fit: cover;
			}
		}
	}
}

/* Tablet - 600px */
@media only screen and (min-width: 48rem) {
	#gallery-453 {
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
		}

		.cs-content {
			flex-direction: row;
			justify-content: space-between;
			align-items: flex-end;
		}

		.cs-flex {
			width: 50%;
		}

		.cs-title {
			margin: 0;
		}

		.cs-button-group {
			width: auto;
		}

		.cs-gallery {
			justify-content: space-between;
		}

		.cs-image {
			/* 171px - 305px */
			width: clamp(10.6875rem, 23.3%, 19.0625rem);
			aspect-ratio: 304/425;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#gallery-453 {
			.cs-topper {
				color: var(--primaryLight);
			}
			.cs-title,
			.cs-text,
			.cs-button {
				color: var(--bodyTextColorWhite);

				&.cs-active {
					color: var(--primaryLight);
				}
			}
		}
	}
}
                                
class CS_GalleryFilter {
	filtersSelector = '.cs-button';
	galleriesSelector = '.cs-gallery';
	activeClass = 'cs-active';
	hiddenClass = 'cs-hidden';

	constructor() {
		this.$galleries = document.querySelectorAll(this.galleriesSelector);
		const $filters = document.querySelectorAll(this.filtersSelector);

		this.onClick($filters[0]);

		for (const $filter of $filters) {
			$filter.addEventListener('click', () => this.onClick($filter));
		}
	}

	onClick($filter) {
		this.filter($filter.dataset.filter);

		const { activeClass } = this;

		this.$activeFilter?.classList.remove(activeClass);
		$filter.classList.add(activeClass);

		this.$activeFilter = $filter;
	}

	filter(filter) {
		const showAll = filter == 'all';
		const { hiddenClass } = this;

		for (const $gallery of this.$galleries) {
			const show = showAll || $gallery.dataset.category == filter;
			$gallery.classList.toggle(hiddenClass, !show);
		}
	}
}

new CS_GalleryFilter();
                                