<!-- ============================================ -->
<!--                   Services                   -->
<!-- ============================================ -->

<section id="services-478">
    <div class="cs-container">
        <div class="cs-left-section">
            <!--Need to have in a wrapper so it's easier to arrange their position at the bottom-->
            <a class="cs-cta" href="">
                <picture class="cs-arrow-wrap">
                    <img class="cs-arrow" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/arrow.svg" loading="lazy" decoding="async" alt="arrow" width="70" height="70">
                </picture>
                <div class="cs-info">
                    <span class="cs-tag">See Our Reviews</span>
                    <span class="cs-desc">5/5 on Google</span>
                </div>
            </a>
            <!--Background Image-->
            <picture class="cs-background">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/SideBySide/tall-grass.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/SideBySide/tall-grass.jpg">
                <img aria-hidden="true" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/SideBySide/tall-grass.jpg" alt="grass" width="625" height="842">
            </picture>
        </div>
        <!--We need to wrap these two in a wrapper so they can be positioned more accurately and easily -->
        <div class="cs-right-section">
            <div class="cs-content">
                <span class="cs-topper">Features</span>
                <h2 class="cs-title">Side by Side Section Example Right </h2>
                <p class="cs-text">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 
                </p>
            </div>
            <ul class="cs-card-group">
                <li class="cs-item">
                    <picture class="cs-icon-wrap">
                        <img class="cs-icon" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/geen1.svg" loading="lazy" decoding="async" alt="moon" width="30" height="30">
                    </picture>
                    <h3 class="cs-h3">Service 1</h3>
                    <p class="cs-item-text">
                        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis, sapiente.
                    </p>
                    <a href="" class="cs-link">Read More</a>
                </li>
                <li class="cs-item">
                    <picture class="cs-icon-wrap">
                        <img class="cs-icon" aria-hidden="true" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/geen1.svg" loading="lazy" decoding="async" alt="moon" width="30" height="30">
                    </picture>
                    <h3 class="cs-h3">Service 1</h3>
                    <p class="cs-item-text">
                        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quis, sapiente.
                    </p>
                    <a href="" class="cs-link">Read More</a>
                </li>
            </ul>
        </div>
    </div>
</section>
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #1F861D;
    --primaryLight: #229521;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #services-478 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
    /* 60px - 200px */
    padding-top: clamp(3.75em, 11vw, 12.5em);
    /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
    overflow: hidden;
  }
  #services-478 .cs-container {
    width: 100%;
    max-width: 80em;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  #services-478 .cs-right-section {
    max-width: 52.75rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* 88px - 118px */
    gap: clamp(5.5rem, 10vw, 7.375rem);
  }
  #services-478 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }
  #services-478 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #services-478 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #services-478 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #services-478 .cs-title {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    max-width: 20ch;
  }
  #services-478 .cs-card-group {
    width: 100%;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    /* resets to a clamp at tablet */
    gap: 3.625rem;
  }
  #services-478 .cs-item {
    list-style: none;
    width: 100%;
    /* 24px - 60px left & right */
    padding: 0 clamp(1.5rem, 2vw, 3.75rem) 2.5rem;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    border: 1px solid #B4B2C7;
    border-radius: 0.75rem;
    box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    transition: border-color 0.3s;
  }
  #services-478 .cs-item:hover {
    border-color: var(--primaryLight);
  }
  #services-478 .cs-item:hover .cs-icon-wrap {
    transform: scale(1.1);
  }
  #services-478 .cs-item:hover:before {
    opacity: 1;
  }
  #services-478 .cs-item:before {
    /* green border box on hover */
    content: '';
    width: 100%;
    height: 100%;
    background: transparent;
    /* prevent border from affecting height and width */
    box-sizing: border-box;
    border: 3px solid var(--primaryLight);
    border-radius: 0.625rem;
    /* prevents the mouse from interacting with it */
    pointer-events: none;
    opacity: 0;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    transition: opacity .3s;
  }
  #services-478 .cs-icon-wrap {
    /* 60px - 110px */
    width: clamp(3.75rem, 7vw, 6.875rem);
    height: clamp(3.75rem, 7vw, 6.875rem);
    /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
    margin-top: calc(clamp(3.75rem, 7vw, 6.875rem)*-.5);
    /* 30px - 40px */
    margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
    background-color: #fff;
    border: 2px solid var(--primaryLight);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    /* places it above the hover border box */
    z-index: 10;
    transition: transform .3s;
  }
  #services-478 .cs-icon {
    /* 32px - 56px */
    width: clamp(2rem, 5vw, 3.5rem);
    height: auto;
    display: block;
  }
  #services-478 .cs-h3 {
    /* 20px - 31px */
    font-size: clamp(1.25rem, 2vw, 1.9375rem);
    line-height: 1.2em;
    font-weight: 700;
    margin: 0 0 0.75rem 0;
    color: var(--headerColor);
  }
  #services-478 .cs-item-text {
    /* 14px - 16px */
    font-size: clamp(0.875rem, 1.5vw, 1rem);
    line-height: 1.5em;
    font-weight: 400;
    text-align: center;
    /* 12px - 32px */
    margin: 0 0 clamp(0.75rem, 3vw, 2rem);
    color: var(--bodyTextColor);
  }
  #services-478 .cs-link {
    /* 16px - 20px */
    font-size: clamp(1rem, 2vw, 1.25rem);
    line-height: 1.5em;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    margin: auto 0 0 0;
    color: var(--primary);
    position: relative;
    display: block;
  }
  #services-478 .cs-link:hover:before {
    width: 100%;
  }
  #services-478 .cs-link:before {
    /* green underline on hover */
    content: '';
    width: 0%;
    height: 2px;
    background: currentColor;
    opacity: 1;
    position: absolute;
    display: block;
    bottom: -2px;
    left: 0;
    transition: width .3s;
  }
  #services-478 .cs-left-section {
    /* changes at tablet */
    width: 100%;
    /* 48px - 64px, removed at tablet */
    margin-bottom: clamp(3rem, 6vw, 4rem);
    /* removed at tablet */
    padding-top: 12.75rem;
    /* 24px - 40px */
    padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
    display: flex;
    justify-content: flex-start;
    align-items: flex-end;
    position: relative;
  }
  #services-478 .cs-background {
    /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
    width: 120vw;
    height: 150vw;
    border-radius: 0 0 0 6.25rem;
    /* clips the gradient pseudo and img tag corner */
    overflow: hidden;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
  #services-478 .cs-background:before {
    /* green gradient at the bottom */
    content: '';
    width: 100%;
    height: 100%;
    background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
    -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
    filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
    opacity: 1;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    z-index: 10;
  }
  #services-478 .cs-background img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes image act like a background image */
    object-fit: cover;
  }
  #services-478 .cs-cta {
    text-decoration: none;
    margin-left: 3rem;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    /* 12px - 24px */
    gap: clamp(0.75rem, 2vw, 1.5rem);
  }
  #services-478 .cs-cta:hover .cs-arrow-wrap {
    transform: scale(1.2);
  }
  #services-478 .cs-arrow-wrap {
    /* 40px - 70px */
    width: clamp(2.5rem, 6vw, 4.375rem);
    height: clamp(2.5rem, 6vw, 4.375rem);
    background: rgba(217, 217, 217, 0.3);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform .3s;
  }
  #services-478 .cs-arrow {
    width: 1.125rem;
    height: auto;
    display: block;
  }
  #services-478 .cs-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
  }
  #services-478 .cs-tag {
    /* 20px - 31px */
    font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
    line-height: 1.2em;
    font-weight: 700;
    text-align: left;
    margin: 0 0 0.25rem 0;
    color: #fff;
    display: block;
  }
  #services-478 .cs-desc {
    /* 14px - 25px */
    font-size: clamp(0.875rem, 2vw, 1.5625rem);
    line-height: 1.2em;
    font-weight: 400;
    text-align: center;
    margin: 0 0 0.25rem 0;
    color: #fff;
    display: block;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #services-478 .cs-container {
    flex-direction: row;
    align-items: stretch;
    justify-content: space-between;
    /* 60px - 130px */
    gap: clamp(3.75rem, 9vw, 8.125rem);
  }
  #services-478 .cs-left-section {
    width: 80%;
    margin: 0;
    padding-top: 0;
    justify-content: flex-start;
    /* pushes to the right side of the container */
    order: 2;
  }
  #services-478 .cs-background {
    width: 40vw;
    height: calc(135%);
  }
  #services-478 .cs-right-section {
    width: 55vw;
    /* prevents flexbox from squshing it */
    flex: none;
  }
  #services-478 .cs-cta {
    margin-left: 0;
    /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
    /* 24px - 100px */
    transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
  }
  #services-478 .cs-info {
    /* prevents flex-box from squishing it */
    flex: none;
  }
  #services-478 .cs-arrow-wrap {
    /* prevents flexbox from squishing it */
    flex: none;
  }
  #services-478 .cs-card-group {
    flex-direction: row;
    /* 16px - 20px */
    gap: clamp(1rem, 1.3vw, 1.25rem);
  }
}
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #1F861D;
    --primaryLight: #229521;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #services-478 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
    /* 60px - 200px */
    padding-top: clamp(3.75em, 11vw, 12.5em);
    /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
    overflow: hidden;
  }
  #services-478 .cs-container {
    width: 100%;
    max-width: 80em;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  #services-478 .cs-right-section {
    max-width: 52.75rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* 88px - 118px */
    gap: clamp(5.5rem, 10vw, 7.375rem);
  }
  #services-478 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }
  #services-478 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #services-478 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #services-478 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #services-478 .cs-title {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    max-width: 20ch;
  }
  #services-478 .cs-card-group {
    width: 100%;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    /* resets to a clamp at tablet */
    gap: 3.625rem;
  }
  #services-478 .cs-item {
    list-style: none;
    width: 100%;
    /* 24px - 60px left & right */
    padding: 0 clamp(1.5rem, 2vw, 3.75rem) 2.5rem;
    /* prevents padding from affecting height and width */
    box-sizing: border-box;
    border: 1px solid #B4B2C7;
    border-radius: 0.75rem;
    box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    transition: border-color 0.3s;
  }
  #services-478 .cs-item:hover {
    border-color: var(--primaryLight);
  }
  #services-478 .cs-item:hover .cs-icon-wrap {
    transform: scale(1.1);
  }
  #services-478 .cs-item:hover:before {
    opacity: 1;
  }
  #services-478 .cs-item:before {
    /* green border box on hover */
    content: '';
    width: 100%;
    height: 100%;
    background: transparent;
    /* prevent border from affecting height and width */
    box-sizing: border-box;
    border: 3px solid var(--primaryLight);
    border-radius: 0.625rem;
    /* prevents the mouse from interacting with it */
    pointer-events: none;
    opacity: 0;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    transition: opacity .3s;
  }
  #services-478 .cs-icon-wrap {
    /* 60px - 110px */
    width: clamp(3.75rem, 7vw, 6.875rem);
    height: clamp(3.75rem, 7vw, 6.875rem);
    /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
    margin-top: calc(clamp(3.75rem, 7vw, 6.875rem)*-.5);
    /* 30px - 40px */
    margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
    background-color: #fff;
    border: 2px solid var(--primaryLight);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    /* places it above the hover border box */
    z-index: 10;
    transition: transform .3s;
  }
  #services-478 .cs-icon {
    /* 32px - 56px */
    width: clamp(2rem, 5vw, 3.5rem);
    height: auto;
    display: block;
  }
  #services-478 .cs-h3 {
    /* 20px - 31px */
    font-size: clamp(1.25rem, 2vw, 1.9375rem);
    line-height: 1.2em;
    font-weight: 700;
    margin: 0 0 0.75rem 0;
    color: var(--headerColor);
  }
  #services-478 .cs-item-text {
    /* 14px - 16px */
    font-size: clamp(0.875rem, 1.5vw, 1rem);
    line-height: 1.5em;
    font-weight: 400;
    text-align: center;
    /* 12px - 32px */
    margin: 0 0 clamp(0.75rem, 3vw, 2rem);
    color: var(--bodyTextColor);
  }
  #services-478 .cs-link {
    /* 16px - 20px */
    font-size: clamp(1rem, 2vw, 1.25rem);
    line-height: 1.5em;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    margin: auto 0 0 0;
    color: var(--primary);
    position: relative;
    display: block;
  }
  #services-478 .cs-link:hover:before {
    width: 100%;
  }
  #services-478 .cs-link:before {
    /* green underline on hover */
    content: '';
    width: 0%;
    height: 2px;
    background: currentColor;
    opacity: 1;
    position: absolute;
    display: block;
    bottom: -2px;
    left: 0;
    transition: width .3s;
  }
  #services-478 .cs-left-section {
    /* changes at tablet */
    width: 100%;
    /* 48px - 64px, removed at tablet */
    margin-bottom: clamp(3rem, 6vw, 4rem);
    /* removed at tablet */
    padding-top: 12.75rem;
    /* 24px - 40px */
    padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
    display: flex;
    justify-content: flex-start;
    align-items: flex-end;
    position: relative;
  }
  #services-478 .cs-background {
    /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
    width: 120vw;
    height: 150vw;
    border-radius: 0 0 0 6.25rem;
    /* clips the gradient pseudo and img tag corner */
    overflow: hidden;
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: -1;
  }
  #services-478 .cs-background:before {
    /* green gradient at the bottom */
    content: '';
    width: 100%;
    height: 100%;
    background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
    -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
    filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
    opacity: 1;
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    z-index: 10;
  }
  #services-478 .cs-background img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes image act like a background image */
    object-fit: cover;
  }
  #services-478 .cs-cta {
    text-decoration: none;
    margin-left: 3rem;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    /* 12px - 24px */
    gap: clamp(0.75rem, 2vw, 1.5rem);
  }
  #services-478 .cs-cta:hover .cs-arrow-wrap {
    transform: scale(1.2);
  }
  #services-478 .cs-arrow-wrap {
    /* 40px - 70px */
    width: clamp(2.5rem, 6vw, 4.375rem);
    height: clamp(2.5rem, 6vw, 4.375rem);
    background: rgba(217, 217, 217, 0.3);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: transform .3s;
  }
  #services-478 .cs-arrow {
    width: 1.125rem;
    height: auto;
    display: block;
  }
  #services-478 .cs-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
  }
  #services-478 .cs-tag {
    /* 20px - 31px */
    font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
    line-height: 1.2em;
    font-weight: 700;
    text-align: left;
    margin: 0 0 0.25rem 0;
    color: #fff;
    display: block;
  }
  #services-478 .cs-desc {
    /* 14px - 25px */
    font-size: clamp(0.875rem, 2vw, 1.5625rem);
    line-height: 1.2em;
    font-weight: 400;
    text-align: center;
    margin: 0 0 0.25rem 0;
    color: #fff;
    display: block;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #services-478 .cs-container {
    flex-direction: row;
    align-items: stretch;
    justify-content: space-between;
    /* 60px - 130px */
    gap: clamp(3.75rem, 9vw, 8.125rem);
  }
  #services-478 .cs-left-section {
    width: 80%;
    margin: 0;
    padding-top: 0;
    justify-content: flex-start;
    /* pushes to the right side of the container */
    order: 2;
  }
  #services-478 .cs-background {
    width: 40vw;
    height: calc(135%);
  }
  #services-478 .cs-right-section {
    width: 55vw;
    /* prevents flexbox from squshing it */
    flex: none;
  }
  #services-478 .cs-cta {
    margin-left: 0;
    /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
    /* 24px - 100px */
    transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
  }
  #services-478 .cs-info {
    /* prevents flex-box from squishing it */
    flex: none;
  }
  #services-478 .cs-arrow-wrap {
    /* prevents flexbox from squishing it */
    flex: none;
  }
  #services-478 .cs-card-group {
    flex-direction: row;
    /* 16px - 20px */
    gap: clamp(1rem, 1.3vw, 1.25rem);
  }
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode #services-478 .cs-topper {
    color: var(--primaryLight);
  }
  body.dark-mode #services-478 .cs-title,
  body.dark-mode #services-478 .cs-text,
  body.dark-mode #services-478 .cs-h3,
  body.dark-mode #services-478 .cs-item-text {
    color: var(--bodyTextColorWhite);
  }
  body.dark-mode #services-478 .cs-icon-wrap {
    background-color: var(--medium);
    border-color: #B4B2C7;
  }
  body.dark-mode #services-478 .cs-icon {
    /* turns the icon white */
    -webkit-filter: grayscale(1) brightness(1000%);
    filter: grayscale(1) brightness(1000%);
  }
  body.dark-mode #services-478 .cs-item-text {
    opacity: .8;
  }
  body.dark-mode #services-478 .cs-link {
    color: var(--primaryLight);
  }
}
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #1F861D;
        --primaryLight: #229521;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #services-478 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* 60px - 200px */
        padding-top: clamp(3.75em, 11vw, 12.5em);
        /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
        overflow: hidden;
        
        .cs-container {
            width: 100%;
            max-width: (1280/16em);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cs-right-section {
            max-width: (844/16rem);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 88px - 118px */
            gap: clamp(5.5rem, 10vw, 7.375rem);
        }
    
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            max-width: 20ch;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: stretch;
            /* resets to a clamp at tablet */
            gap: (58/16rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            /* 24px - 60px left & right */
            padding: 0 clamp(1.5rem, 2vw, 3.75rem) (40/16rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            border: 1px solid #B4B2C7;
            border-radius: (12/16rem);
            box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            transition: border-color .3s;

            &:hover {
                border-color: var(--primaryLight);
                .cs-icon-wrap {
                    transform: scale(1.1);
                }
                &:before {
                    opacity: 1;
                }
            }

            &:before {
                /* green border box on hover */
                content: '';
                width: 100%;
                height: 100%;
                background: transparent;
                /* prevent border from affecting height and width */
                box-sizing: border-box;
                border: 3px solid var(--primaryLight);
                border-radius: (10/16rem);
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                transition: opacity .3s;
            }
        }

        .cs-icon-wrap {
            /* 60px - 110px */
            width: clamp(3.75rem, 7vw, 6.875rem);
            height: clamp(3.75rem, 7vw, 6.875rem);
            /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
            margin-top: ~"calc(clamp(3.75rem, 7vw, 6.875rem)*-.5)";
            /* 30px - 40px */
            margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
            background-color: #fff;
            border: 2px solid var(--primaryLight);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            /* places it above the hover border box */
            z-index: 10;
            transition: transform .3s;
        }

        .cs-icon {
            /* 32px - 56px */
            width: clamp(2rem, 5vw, 3.5rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 (12/16rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
            text-align: center;
            /* 12px - 32px */
            margin: 0 0 clamp(.75rem, 3vw, 2rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.5em;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 700;
            margin: auto 0 0 0;
            color: var(--primary);
            position: relative;
            display: block;

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* green underline on hover */
                content: '';
                width: 0%;
                height: 2px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: -2px;
                left: 0;
                transition: width .3s;
            }
        }

        .cs-left-section {
            /* changes at tablet */
            width: 100%;
            /* 48px - 64px, removed at tablet */
            margin-bottom: clamp(3rem, 6vw, 4rem);
            /* removed at tablet */
            padding-top: (204/16rem);
            /* 24px - 40px */
            padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
            display: flex;
            justify-content: flex-start;
            align-items: flex-end;
            position: relative;
        }

        .cs-background {
            /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
            width: 120vw;
            height: 150vw;
            border-radius: 0 0 0 (100/16rem);
            /* clips the gradient pseudo and img tag corner */
            overflow: hidden;
            position: absolute;
            bottom: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* green gradient at the bottom */
                content: '';
                width: 100%;
                height: 100%;
                background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
                -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 10;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-cta {
            text-decoration: none;
            margin-left: (48/16rem);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 12px - 24px */
            gap: clamp(.75rem, 2vw, 1.5rem);

            &:hover {
                .cs-arrow-wrap {
                    transform: scale(1.2);
                }
            }
        }

        .cs-arrow-wrap {
            /* 40px - 70px */
            width: clamp(2.5rem, 6vw, 4.375rem);
            height: clamp(2.5rem, 6vw, 4.375rem);
            background: rgba(217, 217, 217, 0.3);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform .3s;
        }

        .cs-arrow {
            width: (18/16rem);
            height: auto;
            display: block;
        }

        .cs-info {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
        }

        .cs-tag {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: left;
            margin: 0 0 (4/16rem) 0;
            color: #fff;
            display: block;
        }

        .cs-desc {
            /* 14px - 25px */
            font-size: clamp(.875rem, 2vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 400;
            text-align: center;
            margin: 0 0 (4/16rem) 0;
            color: #fff;
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-478 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
            justify-content: space-between;
            /* 60px - 130px */
            gap: clamp(3.75rem, 9vw, 8.125rem);
        }

        .cs-left-section {
            width: 80%;
            margin: 0;
            padding-top: 0;
            justify-content: flex-start;
            /* pushes to the right side of the container */
            order: 2;
        }

        .cs-background {
            width: 40vw;
            height: calc(100% + 35vw);
        }
        
        .cs-right-section {
            width: 55vw;
            /* prevents flexbox from squshing it */
            flex: none;
        }

        .cs-cta {
            margin-left: 0;
            /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
            /* 24px - 100px */
            transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
        }

        .cs-info {
            /* prevents flex-box from squishing it */
            flex: none;
        }

        .cs-arrow-wrap {
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-card-group {
            flex-direction: row;
            /* 16px - 20px */
            gap: clamp(1rem, 1.3vw, 1.25rem);
        }
    }
}
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #1F861D;
        --primaryLight: #229521;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #services-478 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* 60px - 200px */
        padding-top: clamp(3.75em, 11vw, 12.5em);
        /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
        overflow: hidden;
        
        .cs-container {
            width: 100%;
            max-width: (1280/16em);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cs-right-section {
            max-width: (844/16rem);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 88px - 118px */
            gap: clamp(5.5rem, 10vw, 7.375rem);
        }
    
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            max-width: 20ch;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: stretch;
            /* resets to a clamp at tablet */
            gap: (58/16rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            /* 24px - 60px left & right */
            padding: 0 clamp(1.5rem, 2vw, 3.75rem) (40/16rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            border: 1px solid #B4B2C7;
            border-radius: (12/16rem);
            box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            transition: border-color .3s;

            &:hover {
                border-color: var(--primaryLight);
                .cs-icon-wrap {
                    transform: scale(1.1);
                }
                &:before {
                    opacity: 1;
                }
            }

            &:before {
                /* green border box on hover */
                content: '';
                width: 100%;
                height: 100%;
                background: transparent;
                /* prevent border from affecting height and width */
                box-sizing: border-box;
                border: 3px solid var(--primaryLight);
                border-radius: (10/16rem);
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                transition: opacity .3s;
            }
        }

        .cs-icon-wrap {
            /* 60px - 110px */
            width: clamp(3.75rem, 7vw, 6.875rem);
            height: clamp(3.75rem, 7vw, 6.875rem);
            /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
            margin-top: ~"calc(clamp(3.75rem, 7vw, 6.875rem)*-.5)";
            /* 30px - 40px */
            margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
            background-color: #fff;
            border: 2px solid var(--primaryLight);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            /* places it above the hover border box */
            z-index: 10;
            transition: transform .3s;
        }

        .cs-icon {
            /* 32px - 56px */
            width: clamp(2rem, 5vw, 3.5rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 (12/16rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
            text-align: center;
            /* 12px - 32px */
            margin: 0 0 clamp(.75rem, 3vw, 2rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.5em;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 700;
            margin: auto 0 0 0;
            color: var(--primary);
            position: relative;
            display: block;

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* green underline on hover */
                content: '';
                width: 0%;
                height: 2px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: -2px;
                left: 0;
                transition: width .3s;
            }
        }

        .cs-left-section {
            /* changes at tablet */
            width: 100%;
            /* 48px - 64px, removed at tablet */
            margin-bottom: clamp(3rem, 6vw, 4rem);
            /* removed at tablet */
            padding-top: (204/16rem);
            /* 24px - 40px */
            padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
            display: flex;
            justify-content: flex-start;
            align-items: flex-end;
            position: relative;
        }

        .cs-background {
            /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
            width: 120vw;
            height: 150vw;
            border-radius: 0 0 0 (100/16rem);
            /* clips the gradient pseudo and img tag corner */
            overflow: hidden;
            position: absolute;
            bottom: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* green gradient at the bottom */
                content: '';
                width: 100%;
                height: 100%;
                background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
                -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 10;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-cta {
            text-decoration: none;
            margin-left: (48/16rem);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 12px - 24px */
            gap: clamp(.75rem, 2vw, 1.5rem);

            &:hover {
                .cs-arrow-wrap {
                    transform: scale(1.2);
                }
            }
        }

        .cs-arrow-wrap {
            /* 40px - 70px */
            width: clamp(2.5rem, 6vw, 4.375rem);
            height: clamp(2.5rem, 6vw, 4.375rem);
            background: rgba(217, 217, 217, 0.3);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform .3s;
        }

        .cs-arrow {
            width: (18/16rem);
            height: auto;
            display: block;
        }

        .cs-info {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
        }

        .cs-tag {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: left;
            margin: 0 0 (4/16rem) 0;
            color: #fff;
            display: block;
        }

        .cs-desc {
            /* 14px - 25px */
            font-size: clamp(.875rem, 2vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 400;
            text-align: center;
            margin: 0 0 (4/16rem) 0;
            color: #fff;
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-478 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
            justify-content: space-between;
            /* 60px - 130px */
            gap: clamp(3.75rem, 9vw, 8.125rem);
        }

        .cs-left-section {
            width: 80%;
            margin: 0;
            padding-top: 0;
            justify-content: flex-start;
            /* pushes to the right side of the container */
            order: 2;
        }

        .cs-background {
            width: 40vw;
            height: calc(100% + 35vw);
        }
        
        .cs-right-section {
            width: 55vw;
            /* prevents flexbox from squshing it */
            flex: none;
        }

        .cs-cta {
            margin-left: 0;
            /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
            /* 24px - 100px */
            transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
        }

        .cs-info {
            /* prevents flex-box from squishing it */
            flex: none;
        }

        .cs-arrow-wrap {
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-card-group {
            flex-direction: row;
            /* 16px - 20px */
            gap: clamp(1rem, 1.3vw, 1.25rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-478 {
            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title, .cs-text, .cs-h3, .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-icon-wrap {
                background-color: var(--medium);
                border-color: #B4B2C7;
            }

            .cs-icon {
                /* turns the icon white */
                -webkit-filter: grayscale(1) brightness(1000%);
                filter: grayscale(1) brightness(1000%);
            }

            .cs-item-text {
                opacity: .8;
            }

            .cs-link {
                color: var(--primaryLight);
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #1F861D;
        --primaryLight: #229521;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #services-478 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* 60px - 200px */
        padding-top: clamp(3.75em, 11vw, 12.5em);
        /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
        overflow: hidden;
        
        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cs-right-section {
            max-width: calc(844 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 88px - 118px */
            gap: clamp(5.5rem, 10vw, 7.375rem);
        }
    
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
        
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
        
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
        
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            max-width: 20ch;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: stretch;
            /* resets to a clamp at tablet */
            gap: calc(58 / 16 * 1rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            /* 24px - 60px left & right */
            padding: 0 clamp(1.5rem, 2vw, 3.75rem) calc(40 / 16 * 1rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            border: 1px solid #B4B2C7;
            border-radius: calc(12 / 16 * 1rem);
            box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            transition: border-color .3s;

            &:hover {
                border-color: var(--primaryLight);
                .cs-icon-wrap {
                    transform: scale(1.1);
                }
                &:before {
                    opacity: 1;
                }
            }

            &:before {
                /* green border box on hover */
                content: '';
                width: 100%;
                height: 100%;
                background: transparent;
                /* prevent border from affecting height and width */
                box-sizing: border-box;
                border: 3px solid var(--primaryLight);
                border-radius: calc(10 / 16 * 1rem);
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                transition: opacity .3s;
            }
        }

        .cs-icon-wrap {
            /* 60px - 110px */
            width: clamp(3.75rem, 7vw, 6.875rem);
            height: clamp(3.75rem, 7vw, 6.875rem);
            /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
            margin-top: calc(clamp(3.75rem, 7vw, 6.875rem)*-.5);
            /* 30px - 40px */
            margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
            background-color: #fff;
            border: 2px solid var(--primaryLight);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            /* places it above the hover border box */
            z-index: 10;
            transition: transform .3s;
        }

        .cs-icon {
            /* 32px - 56px */
            width: clamp(2rem, 5vw, 3.5rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 calc(12 / 16 * 1rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
            text-align: center;
            /* 12px - 32px */
            margin: 0 0 clamp(.75rem, 3vw, 2rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.5em;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 700;
            margin: auto 0 0 0;
            color: var(--primary);
            display: block;
            position: relative;

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* green underline on hover */
                content: '';
                width: 0%;
                height: 2px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: -2px;
                left: 0;
                transition: width .3s;
            }
        }

        .cs-left-section {
            /* changes at tablet */
            width: 100%;
            /* 48px - 64px, removed at tablet */
            margin-bottom: clamp(3rem, 6vw, 4rem);
            /* removed at tablet */
            padding-top: calc(204 / 16 * 1rem);
            /* 24px - 40px */
            padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
            display: flex;
            justify-content: flex-start;
            align-items: flex-end;
            position: relative;
        }

        .cs-background {
            /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
            width: 120vw;
            height: 150vw;
            border-radius: 0 0 0 calc(100 / 16 * 1rem);
            /* clips the gradient pseudo and img tag corner */
            overflow: hidden;
            position: absolute;
            bottom: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* green gradient at the bottom */
                content: '';
                width: 100%;
                height: 100%;
                background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
                -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 10;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-cta {
            text-decoration: none;
            margin-left: calc(48 / 16 * 1rem);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 12px - 24px */
            gap: clamp(.75rem, 2vw, 1.5rem);

            &:hover {
                .cs-arrow-wrap {
                    transform: scale(1.2);
                }
            }
        }

        .cs-arrow-wrap {
            /* 40px - 70px */
            width: clamp(2.5rem, 6vw, 4.375rem);
            height: clamp(2.5rem, 6vw, 4.375rem);
            background: rgba(217, 217, 217, 0.3);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform .3s;
        }

        .cs-arrow {
            width: calc(18 / 16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-info {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
        }

        .cs-tag {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: left;
            margin: 0 0 calc(4 / 16 * 1rem) 0;
            color: #fff;
            display: block;
        }

        .cs-desc {
            /* 14px - 25px */
            font-size: clamp(.875rem, 2vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 400;
            text-align: left;
            margin: 0 0 calc(4 / 16 * 1rem) 0;
            color: #fff;
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-478 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
            justify-content: space-between;
            /* 60px - 130px */
            gap: clamp(3.75rem, 9vw, 8.125rem);
        }

        .cs-left-section {
            width: 80%;
            margin: 0;
            padding-top: 0;
            justify-content: flex-start;
            /* pushes to the right side of the container */
            order: 2;
        }

        .cs-background {
            width: 40vw;
            height: calc(100% + 35vw);
        }
        
        .cs-right-section {
            width: 55vw;
            /* prevents flexbox from squshing it */
            flex: none;
        }

        .cs-cta {
            margin-left: 0;
            /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
            /* 24px - 100px */
            transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
        }

        .cs-info {
            /* prevents flex-box from squishing it */
            flex: none;
        }

        .cs-arrow-wrap {
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-card-group {
            flex-direction: row;
            /* 16px - 20px */
            gap: clamp(1rem, 1.3vw, 1.25rem);
        }
    }
}
                                
/*-- -------------------------- -->
<---          Services          -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #1F861D;
        --primaryLight: #229521;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #services-478 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* 60px - 200px */
        padding-top: clamp(3.75em, 11vw, 12.5em);
        /* clips the cs-background section so it doesn't cause any overflow issues when it breaks the container */
        overflow: hidden;
        
        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .cs-right-section {
            max-width: calc(844 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            /* 88px - 118px */
            gap: clamp(5.5rem, 10vw, 7.375rem);
        }
    
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
        
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
        
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
        
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            max-width: 20ch;
        }

        .cs-card-group {
            width: 100%;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: stretch;
            /* resets to a clamp at tablet */
            gap: calc(58 / 16 * 1rem);
        }

        .cs-item {
            list-style: none;
            width: 100%;
            /* 24px - 60px left & right */
            padding: 0 clamp(1.5rem, 2vw, 3.75rem) calc(40 / 16 * 1rem);
            /* prevents padding from affecting height and width */
            box-sizing: border-box;
            border: 1px solid #B4B2C7;
            border-radius: calc(12 / 16 * 1rem);
            box-shadow: 0px 24px 54px rgba(87, 107, 147, 0.12);
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            transition: border-color .3s;

            &:hover {
                border-color: var(--primaryLight);
                .cs-icon-wrap {
                    transform: scale(1.1);
                }
                &:before {
                    opacity: 1;
                }
            }

            &:before {
                /* green border box on hover */
                content: '';
                width: 100%;
                height: 100%;
                background: transparent;
                /* prevent border from affecting height and width */
                box-sizing: border-box;
                border: 3px solid var(--primaryLight);
                border-radius: calc(10 / 16 * 1rem);
                /* prevents the mouse from interacting with it */
                pointer-events: none;
                opacity: 0;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                transition: opacity .3s;
            }
        }

        .cs-icon-wrap {
            /* 60px - 110px */
            width: clamp(3.75rem, 7vw, 6.875rem);
            height: clamp(3.75rem, 7vw, 6.875rem);
            /* wrapped in a calc funtion to multiple the clamp by a negative number to make its value negative, and multiple it by .5 so it pulls itself by half the height of itself. We copy and pasted the same height clamp. These must be equal everytime */
            margin-top: calc(clamp(3.75rem, 7vw, 6.875rem)*-.5);
            /* 30px - 40px */
            margin-bottom: clamp(1.875rem, 5vw, 2.5rem);
            background-color: #fff;
            border: 2px solid var(--primaryLight);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            /* places it above the hover border box */
            z-index: 10;
            transition: transform .3s;
        }

        .cs-icon {
            /* 32px - 56px */
            width: clamp(2rem, 5vw, 3.5rem);
            height: auto;
            display: block;
        }

        .cs-h3 {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            margin: 0 0 calc(12 / 16 * 1rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            font-weight: 400;
            text-align: center;
            /* 12px - 32px */
            margin: 0 0 clamp(.75rem, 3vw, 2rem);
            color: var(--bodyTextColor);
        }

        .cs-link {
            /* 16px - 20px */
            font-size: clamp(1rem, 2vw, 1.25rem);
            line-height: 1.5em;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 700;
            margin: auto 0 0 0;
            color: var(--primary);
            display: block;
            position: relative;

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* green underline on hover */
                content: '';
                width: 0%;
                height: 2px;
                background: currentColor;
                opacity: 1;
                position: absolute;
                display: block;
                bottom: -2px;
                left: 0;
                transition: width .3s;
            }
        }

        .cs-left-section {
            /* changes at tablet */
            width: 100%;
            /* 48px - 64px, removed at tablet */
            margin-bottom: clamp(3rem, 6vw, 4rem);
            /* removed at tablet */
            padding-top: calc(204 / 16 * 1rem);
            /* 24px - 40px */
            padding-bottom: clamp(1.5rem, 7vw, 2.5rem);
            display: flex;
            justify-content: flex-start;
            align-items: flex-end;
            position: relative;
        }

        .cs-background {
            /* width and height set in vw units so the grow as the screen grows.  We go over 100vw so they are long enough push outside the cs-container, passed the section padding, and off screen to mimic the lok in the design, they are reset at tablet */
            width: 120vw;
            height: 150vw;
            border-radius: 0 0 0 calc(100 / 16 * 1rem);
            /* clips the gradient pseudo and img tag corner */
            overflow: hidden;
            position: absolute;
            bottom: 0;
            left: 0;
            z-index: -1;

            &:before {
                /* green gradient at the bottom */
                content: '';
                width: 100%;
                height: 100%;
                background: linear-gradient(360deg, #073506 0%, rgba(7, 53, 6, 0) 67.27%);
                -webkit-filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                filter: drop-shadow(0px 24px 54px rgba(87, 107, 147, 0.12));
                opacity: 1;
                position: absolute;
                display: block;
                top: 0;
                left: 0;
                z-index: 10;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                /* makes image act like a background image */
                object-fit: cover;
            }
        }

        .cs-cta {
            text-decoration: none;
            margin-left: calc(48 / 16 * 1rem);
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 12px - 24px */
            gap: clamp(.75rem, 2vw, 1.5rem);

            &:hover {
                .cs-arrow-wrap {
                    transform: scale(1.2);
                }
            }
        }

        .cs-arrow-wrap {
            /* 40px - 70px */
            width: clamp(2.5rem, 6vw, 4.375rem);
            height: clamp(2.5rem, 6vw, 4.375rem);
            background: rgba(217, 217, 217, 0.3);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform .3s;
        }

        .cs-arrow {
            width: calc(18 / 16 * 1rem);
            height: auto;
            display: block;
        }

        .cs-info {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: flex-start;
        }

        .cs-tag {
            /* 20px - 31px */
            font-size: clamp(1.25rem, 2.5vw, 1.9375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: left;
            margin: 0 0 calc(4 / 16 * 1rem) 0;
            color: #fff;
            display: block;
        }

        .cs-desc {
            /* 14px - 25px */
            font-size: clamp(.875rem, 2vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: 400;
            text-align: left;
            margin: 0 0 calc(4 / 16 * 1rem) 0;
            color: #fff;
            display: block;
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #services-478 {
        .cs-container {
            flex-direction: row;
            align-items: stretch;
            justify-content: space-between;
            /* 60px - 130px */
            gap: clamp(3.75rem, 9vw, 8.125rem);
        }

        .cs-left-section {
            width: 80%;
            margin: 0;
            padding-top: 0;
            justify-content: flex-start;
            /* pushes to the right side of the container */
            order: 2;
        }

        .cs-background {
            width: 40vw;
            height: calc(100% + 35vw);
        }
        
        .cs-right-section {
            width: 55vw;
            /* prevents flexbox from squshing it */
            flex: none;
        }

        .cs-cta {
            margin-left: 0;
            /* we need this link to break outside the cs-container, so we set a negative clamp value to translate left on the x axis as the screen gorws, slowly pulling it farther and farther left outside the cs-container to match the designs posiiton */
            /* 24px - 100px */
            transform: translateX(clamp(1.5rem, 5vw, 6.25rem));
        }

        .cs-info {
            /* prevents flex-box from squishing it */
            flex: none;
        }

        .cs-arrow-wrap {
            /* prevents flexbox from squishing it */
            flex: none;
        }

        .cs-card-group {
            flex-direction: row;
            /* 16px - 20px */
            gap: clamp(1rem, 1.3vw, 1.25rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-478 {
            .cs-topper {
                color: var(--primaryLight);
            }

            .cs-title, .cs-text, .cs-h3, .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-icon-wrap {
                background-color: var(--medium);
                border-color: #B4B2C7;
            }

            .cs-icon {
                /* turns the icon white */
                -webkit-filter: grayscale(1) brightness(1000%);
                filter: grayscale(1) brightness(1000%);
            }

            .cs-item-text {
                opacity: .8;
            }

            .cs-link {
                color: var(--primaryLight);
            }
        }
    }
}
                                