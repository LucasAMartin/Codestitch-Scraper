<!-- ============================================ -->
<!--            Side By Side Reverse              -->
<!-- ============================================ -->

<section id="sbsr-298">
    <div class="cs-container">
        <!-- Left Image Section -->
        <div class="cs-image-group">
            <!--Floating Box-->
            <div class="cs-box">
                <span class="cs-number">14</span>
                <span class="cs-desc">years of practicing</span>
                <!--Background image for cs-box-->
                <picture class="cs-box-picture">
                    <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/justice-m.jpg">
                    <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/justice.jpg">
                    <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/justice.jpg" alt="greek pillars" width="521" height="672" aria-hidden="true">
                </picture>
            </div>
            <!--Big Background Image-->
            <picture class="cs-picture">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/pillars-m.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/pillars.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/pillars.jpg" alt="greek pillars" width="521" height="672" aria-hidden="true">
            </picture>
        </div>
        <!-- Right Content Section-->
        <div class="cs-content">
            <span class="cs-topper">Who We Are</span>
            <h2 class="cs-title">Good People, Great Lawyers</h2>
            <p class="cs-text">
                If you are facing criminal charges, it is crucial to have effective representation immediately. Not only during trial, but also during the pretrial phase as well. At Bernstein Attorneys, our London criminal defense lawyer give your case our full time and attention, to ensure you are treated fairly under the justice system.
            </p>
            <p class="cs-text">Call to ask any question: <a class="cs-link" href="tel:">(555) 455-4555</a></p>
            <a class="cs-button-solid" aria-label="learn more about our programs" href="">Learn More</a>
        </div>
    </div>
</section>
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #042925;
    --primaryLight: #001F3F;
    --secondary: #A36814;
    --secondaryLight: #EDB86F;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbsr-298 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
  }
  #sbsr-298 .cs-container {
    width: 100%;
    /* changes to 1280px at desktop */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  #sbsr-298 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    max-width: 32.625rem;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }
  #sbsr-298 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbsr-298 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbsr-298 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbsr-298 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 1rem;
  }
  #sbsr-298 .cs-text:last-of-type {
    margin-bottom: 2rem;
  }
  #sbsr-298 .cs-link {
    font-size: 1.25rem;
    font-weight: 700;
    text-decoration: none;
    color: var(--primary);
  }
  #sbsr-298 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbsr-298 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width .3s;
  }
  #sbsr-298 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbsr-298 .cs-image-group {
    width: 100%;
    max-width: 34.375rem;
    /* 78px - 108px */
    margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
    position: relative;
    display: block;
    /* width divided by height */
    aspect-ratio: 0.90358127;
  }
  #sbsr-298 .cs-picture {
    /* big background image */
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: block;
  }
  #sbsr-298 .cs-picture img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border-radius: 0.625rem;
    object-fit: cover;
  }
  #sbsr-298 .cs-box {
    /* 204px - 326px & changes at desktop */
    width: clamp(12.75rem, 50vw, 20.375rem);
    height: clamp(12.75rem, 50vw, 20.375rem);
    border-radius: 0.625rem;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: absolute;
    left: 50%;
    /* 38px - 60px - wrapped in a calc function to make clamp values negative */
    bottom: calc(clamp(2.375rem, 7.9vw, 3.75rem) *-1);
    transform: translateX(-50%);
    z-index: 10;
  }
  #sbsr-298 .cs-box-picture {
    /* Background image for cs-box */
    width: 100%;
    height: 100%;
    background-color: #000;
    border-radius: 0.625rem;
    /* clips img corners and bg corners */
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    z-index: -1;
  }
  #sbsr-298 .cs-box-picture img {
    position: absolute;
    top: 0;
    left: 0;
    opacity: .65;
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  #sbsr-298 .cs-number {
    /* 75px - 100px */
    font-size: clamp(4.6875rem, 8vw, 6.25rem);
    line-height: 1em;
    font-weight: 900;
    margin-bottom: 0.5rem;
    color: var(--headerColor);
    /* creates the transparent clipping text */
    mix-blend-mode: screen;
    display: block;
    z-index: 10;
  }
  #sbsr-298 .cs-number:before {
    /* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
    content: '';
    /* 184px - 294px & changes at desktop */
    width: clamp(11.5rem, 45vw, 18.375rem);
    height: clamp(11.5rem, 45vw, 18.375rem);
    opacity: 1;
    background-color: #fff;
    border-radius: 0.4375rem;
    position: absolute;
    display: block;
    /* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
  }
  #sbsr-298 .cs-desc {
    /* 16px - 25px */
    font-size: clamp(1rem, 4vw, 1.5625rem);
    font-weight: 700;
    line-height: 1.2em;
    text-transform: lowercase;
    text-align: center;
    width: 80%;
    color: var(--headerColor);
    position: relative;
    z-index: 10;
  }
}
/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #sbsr-298 {
    /* aligns the button */
    text-align: left;
  }
  #sbsr-298 .cs-container {
    max-width: 80rem;
    /* set to horizontal arrangement */
    flex-direction: row;
    justify-content: space-between;
    gap: 10rem;
  }
  #sbsr-298 .cs-content {
    text-align: left;
    align-items: flex-start;
  }
  #sbsr-298 .cs-image-group {
    width: 40vw;
    max-width: 32.5625rem;
    /* 520px - 672px */
    height: clamp(32.5rem, 51.9vw, 42rem);
    margin: 0;
    /* sends it to the right in the 2nd position */
    order: 2;
  }
  #sbsr-298 .cs-box {
    /* 251px - 325px */
    width: clamp(15.6875rem, 24.5vw, 20.3125rem);
    height: clamp(15.6875rem, 24.5vw, 20.3125rem);
    left: auto;
    transform: none;
    /* -52px to -102px */
    left: calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) *-1);
    /* 62px - 80px */
    bottom: clamp(3.875rem, 6.2vw, 5rem);
  }
  #sbsr-298 .cs-number:before {
    /* 226px - 293px */
    width: clamp(14.125rem, 22.7vw, 18.3125rem);
    height: clamp(14.125rem, 22.7vw, 18.3125rem);
  }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #042925;
    --primaryLight: #001F3F;
    --secondary: #A36814;
    --secondaryLight: #EDB86F;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbsr-298 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
  }
  #sbsr-298 .cs-container {
    width: 100%;
    /* changes to 1280px at desktop */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  #sbsr-298 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: center;
    width: 100%;
    max-width: 32.625rem;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: center;
  }
  #sbsr-298 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbsr-298 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbsr-298 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbsr-298 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 1rem;
  }
  #sbsr-298 .cs-text:last-of-type {
    margin-bottom: 2rem;
  }
  #sbsr-298 .cs-link {
    font-size: 1.25rem;
    font-weight: 700;
    text-decoration: none;
    color: var(--primary);
  }
  #sbsr-298 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbsr-298 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width .3s;
  }
  #sbsr-298 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbsr-298 .cs-image-group {
    width: 100%;
    max-width: 34.375rem;
    /* 78px - 108px */
    margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
    position: relative;
    display: block;
    /* width divided by height */
    aspect-ratio: 0.90358127;
  }
  #sbsr-298 .cs-picture {
    /* big background image */
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: block;
  }
  #sbsr-298 .cs-picture img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border-radius: 0.625rem;
    object-fit: cover;
  }
  #sbsr-298 .cs-box {
    /* 204px - 326px & changes at desktop */
    width: clamp(12.75rem, 50vw, 20.375rem);
    height: clamp(12.75rem, 50vw, 20.375rem);
    border-radius: 0.625rem;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    position: absolute;
    left: 50%;
    /* 38px - 60px - wrapped in a calc function to make clamp values negative */
    bottom: calc(clamp(2.375rem, 7.9vw, 3.75rem) *-1);
    transform: translateX(-50%);
    z-index: 10;
  }
  #sbsr-298 .cs-box-picture {
    /* Background image for cs-box */
    width: 100%;
    height: 100%;
    background-color: #000;
    border-radius: 0.625rem;
    /* clips img corners and bg corners */
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    z-index: -1;
  }
  #sbsr-298 .cs-box-picture img {
    position: absolute;
    top: 0;
    left: 0;
    opacity: .65;
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  #sbsr-298 .cs-number {
    /* 75px - 100px */
    font-size: clamp(4.6875rem, 8vw, 6.25rem);
    line-height: 1em;
    font-weight: 900;
    margin-bottom: 0.5rem;
    color: var(--headerColor);
    /* creates the transparent clipping text */
    mix-blend-mode: screen;
    display: block;
    z-index: 10;
  }
  #sbsr-298 .cs-number:before {
    /* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
    content: '';
    /* 184px - 294px & changes at desktop */
    width: clamp(11.5rem, 45vw, 18.375rem);
    height: clamp(11.5rem, 45vw, 18.375rem);
    opacity: 1;
    background-color: #fff;
    border-radius: 0.4375rem;
    position: absolute;
    display: block;
    /* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
  }
  #sbsr-298 .cs-desc {
    /* 16px - 25px */
    font-size: clamp(1rem, 4vw, 1.5625rem);
    font-weight: 700;
    line-height: 1.2em;
    text-transform: lowercase;
    text-align: center;
    width: 80%;
    color: var(--headerColor);
    position: relative;
    z-index: 10;
  }
}
/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  #sbsr-298 {
    /* aligns the button */
    text-align: left;
  }
  #sbsr-298 .cs-container {
    max-width: 80rem;
    /* set to horizontal arrangement */
    flex-direction: row;
    justify-content: space-between;
    gap: 10rem;
  }
  #sbsr-298 .cs-content {
    text-align: left;
    align-items: flex-start;
  }
  #sbsr-298 .cs-image-group {
    width: 40vw;
    max-width: 32.5625rem;
    /* 520px - 672px */
    height: clamp(32.5rem, 51.9vw, 42rem);
    margin: 0;
    /* sends it to the right in the 2nd position */
    order: 2;
  }
  #sbsr-298 .cs-box {
    /* 251px - 325px */
    width: clamp(15.6875rem, 24.5vw, 20.3125rem);
    height: clamp(15.6875rem, 24.5vw, 20.3125rem);
    left: auto;
    transform: none;
    /* -52px to -102px */
    left: calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) *-1);
    /* 62px - 80px */
    bottom: clamp(3.875rem, 6.2vw, 5rem);
  }
  #sbsr-298 .cs-number:before {
    /* 226px - 293px */
    width: clamp(14.125rem, 22.7vw, 18.3125rem);
    height: clamp(14.125rem, 22.7vw, 18.3125rem);
  }
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode #sbsr-298 .cs-topper {
    color: var(--secondaryLight);
  }
  body.dark-mode #sbsr-298 .cs-title,
  body.dark-mode #sbsr-298 .cs-text {
    color: var(--bodyTextColorWhite);
  }
  body.dark-mode #sbsr-298 .cs-link {
    color: var(--secondaryLight);
  }
  body.dark-mode #sbsr-298 .cs-text {
    opacity: .8;
  }
  body.dark-mode #sbsr-298 .cs-button-solid {
    background-color: var(--secondaryLight);
    color: #1a1a1a;
  }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #042925;
        --primaryLight: #001F3F;
        --secondary: #A36814;
        --secondaryLight: #EDB86F;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbsr-298 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            max-width: (522/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-link {
            font-size: (20/16rem);
            font-weight: 700;
            text-decoration: none;
            color: var(--primary);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-image-group {
            width: 100%;
            max-width: (550/16rem);
            /* 78px - 108px */
            margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
            position: relative;
            display: block;
            /* width divided by height */
            aspect-ratio: 328/363;
        }

        .cs-picture {
            /* big background image */
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                border-radius: (10/16rem);
                object-fit: cover;
            }
        }

        .cs-box {
            /* 204px - 326px & changes at desktop */
            width: clamp(12.75rem, 50vw, 20.375rem);
            height: clamp(12.75rem, 50vw, 20.375rem);
            border-radius: (10/16rem);
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            position: absolute;
            left: 50%;
            /* 38px - 60px - wrapped in a calc function to make clamp values negative */
            bottom: ~"calc(clamp(2.375rem, 7.9vw, 3.75rem) *-1)";
            transform: translateX(-50%);
            z-index: 10;
        }

        .cs-box-picture {
            /* Background image for cs-box */
            width: 100%;
            height: 100%;
            background-color: #000;
            border-radius: (10/16rem);
            /* clips img corners and bg corners */
            overflow: hidden;
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            z-index: -1;

            img {
                position: absolute;
                top: 0;
                left: 0;
                opacity: .65;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-number {
            /* 75px - 100px */
            font-size: clamp(4.6875rem, 8vw, 6.25rem);
            line-height: 1em;
            font-weight: 900;
            margin-bottom: (8/16rem);
            color: var(--headerColor);
            /* creates the transparent clipping text */
            mix-blend-mode: screen;
            display: block;
            z-index: 10;

            &:before {
                /* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
                content: '';
                /* 184px - 294px & changes at desktop */
                width: clamp(11.5rem, 45vw, 18.375rem);
                height: clamp(11.5rem, 45vw, 18.375rem);
                opacity: 1;
                background-color: #fff;
                border-radius: (7/16rem);
                position: absolute;
                display: block;
                /* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: -1;
            }
        }

        .cs-desc {
            /* 16px - 25px */
            font-size: clamp(1rem, 4vw, 1.5625rem);
            font-weight: 700;
            line-height: 1.2em;
            text-transform: lowercase;
            text-align: center;
            width: 80%;
            color: var(--headerColor);
            position: relative;
            z-index: 10;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #sbsr-298 {
        /* aligns the button */
        text-align: left;
        .cs-container {
            max-width: (1280/16rem);
            /* set to horizontal arrangement */
            flex-direction: row;
            justify-content: space-between;
            gap: (160/16rem);
        }

        .cs-content {
            text-align: left;
            align-items: flex-start;
        }

        .cs-image-group {
            width: 40vw;
            max-width: (521/16rem);
            /* 520px - 672px */
            height: clamp(32.5rem, 51.9vw, 42rem);
            margin: 0;
            /* sends it to the right in the 2nd position */
            order: 2;
        }

        .cs-box {
            /* 251px - 325px */
            width: clamp(15.6875rem, 24.5vw, 20.3125rem);
            height: clamp(15.6875rem, 24.5vw, 20.3125rem);
            left: auto;
            transform: none;
            /* -52px to -102px */
            left: ~"calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) *-1)";
            /* 62px - 80px */
            bottom: clamp(3.875rem, 6.2vw, 5rem);
        }

        .cs-number {
            &:before {
                /* 226px - 293px */
                width: clamp(14.125rem, 22.7vw, 18.3125rem);
                height: clamp(14.125rem, 22.7vw, 18.3125rem);
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #042925;
        --primaryLight: #001F3F;
        --secondary: #A36814;
        --secondaryLight: #EDB86F;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbsr-298 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);

        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: center;
            width: 100%;
            max-width: (522/16rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: center;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (16/16rem);
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-link {
            font-size: (20/16rem);
            font-weight: 700;
            text-decoration: none;
            color: var(--primary);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-image-group {
            width: 100%;
            max-width: (550/16rem);
            /* 78px - 108px */
            margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
            position: relative;
            display: block;
            /* width divided by height */
            aspect-ratio: 328/363;
        }

        .cs-picture {
            /* big background image */
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                border-radius: (10/16rem);
                object-fit: cover;
            }
        }

        .cs-box {
            /* 204px - 326px & changes at desktop */
            width: clamp(12.75rem, 50vw, 20.375rem);
            height: clamp(12.75rem, 50vw, 20.375rem);
            border-radius: (10/16rem);
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            position: absolute;
            left: 50%;
            /* 38px - 60px - wrapped in a calc function to make clamp values negative */
            bottom: ~"calc(clamp(2.375rem, 7.9vw, 3.75rem) *-1)";
            transform: translateX(-50%);
            z-index: 10;
        }

        .cs-box-picture {
            /* Background image for cs-box */
            width: 100%;
            height: 100%;
            background-color: #000;
            border-radius: (10/16rem);
            /* clips img corners and bg corners */
            overflow: hidden;
            position: absolute;
            top: 0;
            left: 0;
            display: block;
            z-index: -1;

            img {
                position: absolute;
                top: 0;
                left: 0;
                opacity: .65;
                height: 100%;
                width: 100%;
                object-fit: cover;
            }
        }

        .cs-number {
            /* 75px - 100px */
            font-size: clamp(4.6875rem, 8vw, 6.25rem);
            line-height: 1em;
            font-weight: 900;
            margin-bottom: (8/16rem);
            color: var(--headerColor);
            /* creates the transparent clipping text */
            mix-blend-mode: screen;
            display: block;
            z-index: 10;

            &:before {
                /* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
                content: '';
                /* 184px - 294px & changes at desktop */
                width: clamp(11.5rem, 45vw, 18.375rem);
                height: clamp(11.5rem, 45vw, 18.375rem);
                opacity: 1;
                background-color: #fff;
                border-radius: (7/16rem);
                position: absolute;
                display: block;
                /* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                z-index: -1;
            }
        }

        .cs-desc {
            /* 16px - 25px */
            font-size: clamp(1rem, 4vw, 1.5625rem);
            font-weight: 700;
            line-height: 1.2em;
            text-transform: lowercase;
            text-align: center;
            width: 80%;
            color: var(--headerColor);
            position: relative;
            z-index: 10;
        }
    }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #sbsr-298 {
        /* aligns the button */
        text-align: left;
        .cs-container {
            max-width: (1280/16rem);
            /* set to horizontal arrangement */
            flex-direction: row;
            justify-content: space-between;
            gap: (160/16rem);
        }

        .cs-content {
            text-align: left;
            align-items: flex-start;
        }

        .cs-image-group {
            width: 40vw;
            max-width: (521/16rem);
            /* 520px - 672px */
            height: clamp(32.5rem, 51.9vw, 42rem);
            margin: 0;
            /* sends it to the right in the 2nd position */
            order: 2;
        }

        .cs-box {
            /* 251px - 325px */
            width: clamp(15.6875rem, 24.5vw, 20.3125rem);
            height: clamp(15.6875rem, 24.5vw, 20.3125rem);
            left: auto;
            transform: none;
            /* -52px to -102px */
            left: ~"calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) *-1)";
            /* 62px - 80px */
            bottom: clamp(3.875rem, 6.2vw, 5rem);
        }

        .cs-number {
            &:before {
                /* 226px - 293px */
                width: clamp(14.125rem, 22.7vw, 18.3125rem);
                height: clamp(14.125rem, 22.7vw, 18.3125rem);
            }
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbsr-298 {
            .cs-topper {
                color: var(--secondaryLight);
            }

            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-link {
                color: var(--secondaryLight);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-button-solid {
                background-color: var(--secondaryLight);
                color: #1a1a1a;
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #042925;
		--primaryLight: #001f3f;
		--secondary: #a36814;
		--secondaryLight: #edb86f;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#sbsr-298 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			/* changes to 1280px at desktop */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: center;
			width: 100%;
			max-width: calc(522 / 16 * 1rem);
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: center;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-link {
			font-size: calc(20 / 16 * 1rem);
			font-weight: 700;
			text-decoration: none;
			color: var(--primary);
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-image-group {
			width: 100%;
			max-width: calc(550 / 16 * 1rem);
			/* 78px - 108px */
			margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
			position: relative;
			display: block;
			/* width divided by height */
			aspect-ratio: 328/363;
		}

		.cs-picture {
			/* big background image */
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				border-radius: calc(10 / 16 * 1rem);
				object-fit: cover;
			}
		}

		.cs-box {
			/* 204px - 326px & changes at desktop */
			width: clamp(12.75rem, 50vw, 20.375rem);
			height: clamp(12.75rem, 50vw, 20.375rem);
			border-radius: calc(10 / 16 * 1rem);
			overflow: hidden;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			position: absolute;
			left: 50%;
			/* 38px - 60px - wrapped in a calc function to make clamp values negative */
			bottom: calc(clamp(2.375rem, 7.9vw, 3.75rem) * -1);
			transform: translateX(-50%);
			z-index: 10;
		}

		.cs-box-picture {
			/* Background image for cs-box */
			width: 100%;
			height: 100%;
			background-color: #000;
			border-radius: calc(10 / 16 * 1rem);
			/* clips img corners and bg corners */
			overflow: hidden;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			z-index: -1;

			img {
				position: absolute;
				top: 0;
				left: 0;
				opacity: 0.65;
				height: 100%;
				width: 100%;
				object-fit: cover;
			}
		}

		.cs-number {
			/* 75px - 100px */
			font-size: clamp(4.6875rem, 8vw, 6.25rem);
			line-height: 1em;
			font-weight: 900;
			margin-bottom: calc(8 / 16 * 1rem);
			color: var(--headerColor);
			/* creates the transparent clipping text */
			mix-blend-mode: screen;
			display: block;
			z-index: 10;

			&:before {
				/* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
				content: '';
				/* 184px - 294px & changes at desktop */
				width: clamp(11.5rem, 45vw, 18.375rem);
				height: clamp(11.5rem, 45vw, 18.375rem);
				opacity: 1;
				background-color: #fff;
				border-radius: calc(7 / 16 * 1rem);
				position: absolute;
				display: block;
				/* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				z-index: -1;
			}
		}

		.cs-desc {
			/* 16px - 25px */
			font-size: clamp(1rem, 4vw, 1.5625rem);
			font-weight: 700;
			line-height: 1.2em;
			text-transform: lowercase;
			text-align: center;
			width: 80%;
			color: var(--headerColor);
			position: relative;
			z-index: 10;
		}
	}
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
	#sbsr-298 {
		/* aligns the button */
		text-align: left;
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
			/* set to horizontal arrangement */
			flex-direction: row;
			justify-content: space-between;
			gap: calc(160 / 16 * 1rem);
		}

		.cs-content {
			text-align: left;
			align-items: flex-start;
		}

		.cs-image-group {
			width: 40vw;
			max-width: calc(521 / 16 * 1rem);
			/* 520px - 672px */
			height: clamp(32.5rem, 51.9vw, 42rem);
			margin: 0;
			/* sends it to the right in the 2nd position */
			order: 2;
		}

		.cs-box {
			/* 251px - 325px */
			width: clamp(15.6875rem, 24.5vw, 20.3125rem);
			height: clamp(15.6875rem, 24.5vw, 20.3125rem);
			left: auto;
			transform: none;
			/* -52px to -102px */
			left: calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) * -1);
			/* 62px - 80px */
			bottom: clamp(3.875rem, 6.2vw, 5rem);
		}

		.cs-number {
			&:before {
				/* 226px - 293px */
				width: clamp(14.125rem, 22.7vw, 18.3125rem);
				height: clamp(14.125rem, 22.7vw, 18.3125rem);
			}
		}
	}
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #042925;
		--primaryLight: #001f3f;
		--secondary: #a36814;
		--secondaryLight: #edb86f;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#sbsr-298 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		padding: var(--sectionPadding);

		.cs-container {
			width: 100%;
			/* changes to 1280px at desktop */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: center;
			width: 100%;
			max-width: calc(522 / 16 * 1rem);
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: center;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-link {
			font-size: calc(20 / 16 * 1rem);
			font-weight: 700;
			text-decoration: none;
			color: var(--primary);
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-image-group {
			width: 100%;
			max-width: calc(550 / 16 * 1rem);
			/* 78px - 108px */
			margin: 0 auto clamp(4.875rem, 16.5vw, 6.75rem);
			position: relative;
			display: block;
			/* width divided by height */
			aspect-ratio: 328/363;
		}

		.cs-picture {
			/* big background image */
			width: 100%;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				border-radius: calc(10 / 16 * 1rem);
				object-fit: cover;
			}
		}

		.cs-box {
			/* 204px - 326px & changes at desktop */
			width: clamp(12.75rem, 50vw, 20.375rem);
			height: clamp(12.75rem, 50vw, 20.375rem);
			border-radius: calc(10 / 16 * 1rem);
			overflow: hidden;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			position: absolute;
			left: 50%;
			/* 38px - 60px - wrapped in a calc function to make clamp values negative */
			bottom: calc(clamp(2.375rem, 7.9vw, 3.75rem) * -1);
			transform: translateX(-50%);
			z-index: 10;
		}

		.cs-box-picture {
			/* Background image for cs-box */
			width: 100%;
			height: 100%;
			background-color: #000;
			border-radius: calc(10 / 16 * 1rem);
			/* clips img corners and bg corners */
			overflow: hidden;
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			z-index: -1;

			img {
				position: absolute;
				top: 0;
				left: 0;
				opacity: 0.65;
				height: 100%;
				width: 100%;
				object-fit: cover;
			}
		}

		.cs-number {
			/* 75px - 100px */
			font-size: clamp(4.6875rem, 8vw, 6.25rem);
			line-height: 1em;
			font-weight: 900;
			margin-bottom: calc(8 / 16 * 1rem);
			color: var(--headerColor);
			/* creates the transparent clipping text */
			mix-blend-mode: screen;
			display: block;
			z-index: 10;

			&:before {
				/* opaque white box - For mix-blend-mode to work, we need the 
                   white box inside the .cs-number, so we use a pseudo element.
                   We DON'T add a position to the cs-number so the pseudo positions
                   itself relative to the .cs-box, which has position relative. This
                   allows us to center to .cs-number pseudo inside the .cs-box */
				content: '';
				/* 184px - 294px & changes at desktop */
				width: clamp(11.5rem, 45vw, 18.375rem);
				height: clamp(11.5rem, 45vw, 18.375rem);
				opacity: 1;
				background-color: #fff;
				border-radius: calc(7 / 16 * 1rem);
				position: absolute;
				display: block;
				/* these next 3 properties are an old school way to center an absolutely
                   positioned element inside a relative position parent */
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				z-index: -1;
			}
		}

		.cs-desc {
			/* 16px - 25px */
			font-size: clamp(1rem, 4vw, 1.5625rem);
			font-weight: 700;
			line-height: 1.2em;
			text-transform: lowercase;
			text-align: center;
			width: 80%;
			color: var(--headerColor);
			position: relative;
			z-index: 10;
		}
	}
}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
	#sbsr-298 {
		/* aligns the button */
		text-align: left;
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
			/* set to horizontal arrangement */
			flex-direction: row;
			justify-content: space-between;
			gap: calc(160 / 16 * 1rem);
		}

		.cs-content {
			text-align: left;
			align-items: flex-start;
		}

		.cs-image-group {
			width: 40vw;
			max-width: calc(521 / 16 * 1rem);
			/* 520px - 672px */
			height: clamp(32.5rem, 51.9vw, 42rem);
			margin: 0;
			/* sends it to the right in the 2nd position */
			order: 2;
		}

		.cs-box {
			/* 251px - 325px */
			width: clamp(15.6875rem, 24.5vw, 20.3125rem);
			height: clamp(15.6875rem, 24.5vw, 20.3125rem);
			left: auto;
			transform: none;
			/* -52px to -102px */
			left: calc(clamp(3.25rem, 5.5vw + 1.6rem, 6.375rem) * -1);
			/* 62px - 80px */
			bottom: clamp(3.875rem, 6.2vw, 5rem);
		}

		.cs-number {
			&:before {
				/* 226px - 293px */
				width: clamp(14.125rem, 22.7vw, 18.3125rem);
				height: clamp(14.125rem, 22.7vw, 18.3125rem);
			}
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#sbsr-298 {
			.cs-topper {
				color: var(--secondaryLight);
			}

			.cs-title,
			.cs-text {
				color: var(--bodyTextColorWhite);
			}

			.cs-link {
				color: var(--secondaryLight);
			}

			.cs-text {
				opacity: 0.8;
			}

			.cs-button-solid {
				background-color: var(--secondaryLight);
				color: #1a1a1a;
			}
		}
	}
}
                                