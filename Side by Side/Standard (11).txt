<!-- ============================================ -->
<!--                 Side By Side                 -->
<!-- ============================================ -->

<section id="sbs-1024">
    <div class="cs-container">
        <div class="cs-image-group">
            <picture class="cs-picture">
                <!--Mobile Image-->
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Food-Menu/steak.jpg">
                <!--Tablet and above Image-->
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Food-Menu/steak.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Food-Menu/steak.jpg" alt="steak" width="1280" height="568">
            </picture>
            <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/star-circle-noborder.svg" alt="star" width="120" height="120">
        </div>
        <div class="cs-content">
            <div class="cs-flex-group">
                <span class="cs-topper">Our Special Menu</span>
                <h2 class="cs-title">Purple Corn Tostada</h2>
                <a href="" class="cs-button-solid">Reserve Your Table</a>
            </div>
            <p class="cs-text">
                Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit.
                <br>
                <br>
                Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit. Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat duis enim velit mollit.
            </p>
        </div>
    </div>
</section>
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #AB661C;
    --primaryLight: #d8673d;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbs-1024 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
  }
  #sbs-1024 .cs-container {
    width: 100%;
    max-width: 80rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
  }
  #sbs-1024 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #sbs-1024 .cs-flex-group {
    width: 100%;
    max-width: 32.625rem;
    /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
    display: contents;
  }
  #sbs-1024 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbs-1024 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbs-1024 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbs-1024 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 2rem;
    max-width: 33.875rem;
  }
  #sbs-1024 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 2rem;
    background-color: var(--primary);
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbs-1024 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    transition: width .3s;
  }
  #sbs-1024 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbs-1024 .cs-button-solid {
    /* button override, sends it to the bottom of the felxbox container */
    order: 10;
  }
  #sbs-1024 .cs-image-group {
    width: 100%;
    /* 60px - 110px, same value as the the cs-icon top value */
    margin-top: clamp(4rem, 10vw, 6.875rem);
    position: relative;
  }
  #sbs-1024 .cs-picture {
    width: 100%;
    height: 67vw;
    max-height: 30rem;
    display: block;
    position: relative;
  }
  #sbs-1024 .cs-picture img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }
  #sbs-1024 .cs-icon {
    /* 80px - 120px */
    width: clamp(5rem, 17vw, 7.5rem);
    height: auto;
    border: 20px solid #fff;
    border-radius: 50%;
    background-color: #fff;
    box-sizing: content-box;
    display: block;
    position: absolute;
    /* 60px - 110px */
    top: calc(clamp(4rem, 10vw, 6.875rem)*-1);
    left: -1.25rem;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #sbs-1024 .cs-content {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 3rem;
  }
  #sbs-1024 .cs-flex-group {
    /* returns the button as a direct child of the cs-flex-group */
    display: block;
    width: 50%;
  }
  #sbs-1024 .cs-title {
    margin-bottom: 2rem;
  }
  #sbs-1024 .cs-text {
    margin: 0;
    width: 50%;
    /* prevents flexbox from squishing it */
    flex: none;
  }
}
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #AB661C;
    --primaryLight: #d8673d;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbs-1024 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
  }
  #sbs-1024 .cs-container {
    width: 100%;
    max-width: 80rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3rem;
  }
  #sbs-1024 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #sbs-1024 .cs-flex-group {
    width: 100%;
    max-width: 32.625rem;
    /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
    display: contents;
  }
  #sbs-1024 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbs-1024 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbs-1024 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbs-1024 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 2rem;
    max-width: 33.875rem;
  }
  #sbs-1024 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 2rem;
    background-color: var(--primary);
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbs-1024 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    transition: width .3s;
  }
  #sbs-1024 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbs-1024 .cs-button-solid {
    /* button override, sends it to the bottom of the felxbox container */
    order: 10;
  }
  #sbs-1024 .cs-image-group {
    width: 100%;
    /* 60px - 110px, same value as the the cs-icon top value */
    margin-top: clamp(4rem, 10vw, 6.875rem);
    position: relative;
  }
  #sbs-1024 .cs-picture {
    width: 100%;
    height: 67vw;
    max-height: 30rem;
    display: block;
    position: relative;
  }
  #sbs-1024 .cs-picture img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
  }
  #sbs-1024 .cs-icon {
    /* 80px - 120px */
    width: clamp(5rem, 17vw, 7.5rem);
    height: auto;
    border: 20px solid #fff;
    border-radius: 50%;
    background-color: #fff;
    box-sizing: content-box;
    display: block;
    position: absolute;
    /* 60px - 110px */
    top: calc(clamp(4rem, 10vw, 6.875rem)*-1);
    left: -1.25rem;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #sbs-1024 .cs-content {
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 3rem;
  }
  #sbs-1024 .cs-flex-group {
    /* returns the button as a direct child of the cs-flex-group */
    display: block;
    width: 50%;
  }
  #sbs-1024 .cs-title {
    margin-bottom: 2rem;
  }
  #sbs-1024 .cs-text {
    margin: 0;
    width: 50%;
    /* prevents flexbox from squishing it */
    flex: none;
  }
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode #sbs-1024 .cs-title,
  body.dark-mode #sbs-1024 .cs-text {
    color: var(--bodyTextColorWhite);
  }
  body.dark-mode #sbs-1024 .cs-text {
    opacity: .8;
  }
  body.dark-mode #sbs-1024 .cs-icon {
    border-color: var(--dark);
    background-color: var(--dark);
  }
}
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #AB661C;
        --primaryLight: #d8673d;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbs-1024 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: (48/16rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-flex-group {
            width: 100%;
            max-width: (522/16rem);
            /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
            display: contents;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (32/16rem);
            max-width: (542/16rem);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (32/16rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-button-solid {
            /* button override, sends it to the bottom of the felxbox container */
            order: 10;
        }

        .cs-image-group {
            width: 100%;
            /* 60px - 110px, same value as the the cs-icon top value */
            margin-top: clamp(4rem, 10vw, 6.875rem);
            position: relative;
        }

        .cs-picture {
            width: 100%;
            height: 67vw;
            max-height: (480/16rem);
            display: block;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .cs-icon {
            /* 80px - 120px */
            width: clamp(5rem, 17vw, 7.5rem);
            height: auto;
            border: 20px solid #fff;
            border-radius: 50%;
            background-color: #fff;
            box-sizing: content-box;
            display: block;
            position: absolute;
            /* 60px - 110px */
            top: ~"calc(clamp(4rem, 10vw, 6.875rem)*-1)";
            left: (-20/16rem);
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-1024 {
        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: (48/16rem);
        }

        .cs-flex-group {
            /* returns the button as a direct child of the cs-flex-group */
            display: block;
            width: 50%;
        }

        .cs-title {
            margin-bottom: (32/16rem);
        }

        .cs-text {
            margin: 0;
            width: 50%;
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #AB661C;
        --primaryLight: #d8673d;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbs-1024 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: (48/16rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-flex-group {
            width: 100%;
            max-width: (522/16rem);
            /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
            display: contents;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (32/16rem);
            max-width: (542/16rem);
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (32/16rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-button-solid {
            /* button override, sends it to the bottom of the felxbox container */
            order: 10;
        }

        .cs-image-group {
            width: 100%;
            /* 60px - 110px, same value as the the cs-icon top value */
            margin-top: clamp(4rem, 10vw, 6.875rem);
            position: relative;
        }

        .cs-picture {
            width: 100%;
            height: 67vw;
            max-height: (480/16rem);
            display: block;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .cs-icon {
            /* 80px - 120px */
            width: clamp(5rem, 17vw, 7.5rem);
            height: auto;
            border: 20px solid #fff;
            border-radius: 50%;
            background-color: #fff;
            box-sizing: content-box;
            display: block;
            position: absolute;
            /* 60px - 110px */
            top: ~"calc(clamp(4rem, 10vw, 6.875rem)*-1)";
            left: (-20/16rem);
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-1024 {
        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: (48/16rem);
        }

        .cs-flex-group {
            /* returns the button as a direct child of the cs-flex-group */
            display: block;
            width: 50%;
        }

        .cs-title {
            margin-bottom: (32/16rem);
        }

        .cs-text {
            margin: 0;
            width: 50%;
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbs-1024 {
            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-icon {
                border-color: var(--dark);
                background-color: var(--dark);
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #AB661C;
        --primaryLight: #d8673d;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbs-1024 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-flex-group {
            width: 100%;
            max-width: calc(522 / 16 * 1rem);
            /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
            display: contents;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: calc(32 / 16 * 1rem);
            max-width: calc(542 / 16 * 1rem);
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(32 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-button-solid {
            /* button override, sends it to the bottom of the felxbox container */
            order: 10;
        }

        .cs-image-group {
            width: 100%;
            /* 60px - 110px, same value as the the cs-icon top value */
            margin-top: clamp(4rem, 10vw, 6.875rem);
            position: relative;
        }

        .cs-picture {
            width: 100%;
            height: 67vw;
            max-height: calc(480 / 16 * 1rem);
            display: block;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .cs-icon {
            /* 80px - 120px */
            width: clamp(5rem, 17vw, 7.5rem);
            height: auto;
            border: 20px solid #fff;
            border-radius: 50%;
            background-color: #fff;
            box-sizing: content-box;
            display: block;
            position: absolute;
            /* 60px - 110px */
            top: calc(clamp(4rem, 10vw, 6.875rem)*-1);
            left: calc(-20 / 16 * 1rem);
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-1024 {
        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-flex-group {
            /* returns the button as a direct child of the cs-flex-group */
            display: block;
            width: 50%;
        }

        .cs-title {
            margin-bottom: calc(32 / 16 * 1rem);
        }

        .cs-text {
            margin: 0;
            width: 50%;
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}
                                
/*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #AB661C;
        --primaryLight: #d8673d;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbs-1024 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            max-width: calc(1280 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }

        .cs-flex-group {
            width: 100%;
            max-width: calc(522 / 16 * 1rem);
            /* breaks up the container. The children are now direct children of the .cs-content div.  This allows us to use flexbox order property to send the button to the bottom of the cs-content */
            display: contents;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: calc(32 / 16 * 1rem);
            max-width: calc(542 / 16 * 1rem);
        }

        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(32 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-button-solid {
            /* button override, sends it to the bottom of the felxbox container */
            order: 10;
        }

        .cs-image-group {
            width: 100%;
            /* 60px - 110px, same value as the the cs-icon top value */
            margin-top: clamp(4rem, 10vw, 6.875rem);
            position: relative;
        }

        .cs-picture {
            width: 100%;
            height: 67vw;
            max-height: calc(480 / 16 * 1rem);
            display: block;
            position: relative;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }

        .cs-icon {
            /* 80px - 120px */
            width: clamp(5rem, 17vw, 7.5rem);
            height: auto;
            border: 20px solid #fff;
            border-radius: 50%;
            background-color: #fff;
            box-sizing: content-box;
            display: block;
            position: absolute;
            /* 60px - 110px */
            top: calc(clamp(4rem, 10vw, 6.875rem)*-1);
            left: calc(-20 / 16 * 1rem);
        }
    }

}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbs-1024 {
        .cs-content {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
            gap: calc(48 / 16 * 1rem);
        }

        .cs-flex-group {
            /* returns the button as a direct child of the cs-flex-group */
            display: block;
            width: 50%;
        }

        .cs-title {
            margin-bottom: calc(32 / 16 * 1rem);
        }

        .cs-text {
            margin: 0;
            width: 50%;
            /* prevents flexbox from squishing it */
            flex: none;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbs-1024 {
            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: .8;
            }

            .cs-icon {
                border-color: var(--dark);
                background-color: var(--dark);
            }
        }
    }
}
                                