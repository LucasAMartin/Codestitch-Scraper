<!-- ============================================ -->
<!--             Side By Side Reverse             -->
<!-- ============================================ -->

<section id="sbsr-79">
    <div class="cs-container">
        <div class="cs-wrapper">
            <picture class="cs-picture">
                <source media="(max-width: 600px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/body-builder-m.jpg">
                <source media="(min-width: 601px)" srcset="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/body-builder.jpg">
                <img loading="lazy" decoding="async" src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/body-builder.jpg" alt="body builder" width="500" height="552" aria-hidden="true">
            </picture>
        </div>
        <div class="cs-content">
            <span class="cs-topper">Small Group Training</span>
            <h2 class="cs-title">Make your circle healthier together</h2>
            <p class="cs-text">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc massa ut sed odio cursus. Malesuada scelerisque eget eu, sollicitudin tellus nibh aenean enim sed. Ut vitae eget commodo consectetur felis augue. Condimentum pellentesque sed aliquet leo in potenti libero.
            </p>
            <a class="cs-button-solid" aria-label="learn more about our programs" href="">Learn More</a>
        </div>
    </div>
</section>
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #E12213;
    --primaryLight: #001F3F;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbsr-79 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
    /* clips the red box from causing overflow issues */
    overflow: hidden;
    background-color: #1a1a1a;
  }
  #sbsr-79 .cs-container {
    width: 100%;
    /* changes to 1280px at tablet */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
  }
  #sbsr-79 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    max-width: 33.875rem;
    margin-right: auto;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #sbsr-79 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbsr-79 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbsr-79 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbsr-79 .cs-title {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    color: var(--bodyTextColorWhite);
  }
  #sbsr-79 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 1rem;
    color: var(--bodyTextColorWhite);
    opacity: .8;
  }
  #sbsr-79 .cs-text:last-of-type {
    margin-bottom: 2rem;
  }
  #sbsr-79 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbsr-79 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width .3s;
  }
  #sbsr-79 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbsr-79 .cs-wrapper {
    width: 95%;
    max-width: 34.375rem;
    /* 28px - 80px */
    /* pushes up and down by the same amount the decorative box overflows the wrapper */
    margin: clamp(1.75em, 7.8vw, 5em) 0;
    position: relative;
    z-index: 1;
  }
  #sbsr-79 .cs-wrapper:before {
    /* Red decorative box */
    content: '';
    /* make it huge so it covers everything on the left as it overflows */
    width: 50em;
    background: var(--primary);
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 28px - 80px */
    /* wrapped in a calc function to get a negative clamp value */
    top: calc(clamp(1.75em, 7.8vw, 5em) * -1);
    bottom: calc(clamp(1.75em, 7.8vw, 5em) * -1);
    left: 4.0625em;
    z-index: -1;
  }
  #sbsr-79 .cs-picture {
    width: 100%;
    margin: 0;
    display: block;
    /* width divided by height */
    aspect-ratio: 0.93134328;
    border-radius: 1rem;
    position: relative;
    z-index: 1;
  }
  #sbsr-79 .cs-picture:before {
    /* Top right box */
    content: '';
    width: 10rem;
    /* 202px - 248px */
    height: clamp(12.625rem, 25vw, 15.5rem);
    background: #fff;
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 16px -20px */
    /* wrapped in a calc function to get a negative clamp value */
    top: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    right: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
  }
  #sbsr-79 .cs-picture:after {
    /* Bottom left box */
    content: '';
    width: 10rem;
    /* 202px - 248px */
    height: clamp(12.625rem, 25vw, 15.5rem);
    background: #fff;
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 16px -20px */
    /* wrapped in a calc function to get a negative clamp value */
    bottom: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    left: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    z-index: -1;
  }
  #sbsr-79 .cs-picture img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: 1rem;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #sbsr-79 .cs-container {
    max-width: 80rem;
    flex-direction: row;
    justify-content: flex-end;
    /* 60px - 128px */
    gap: clamp(3.75rem, 9.5vw, 8rem);
  }
  #sbsr-79 .cs-wrapper {
    /* 328px - 502px */
    width: clamp(20.5rem, 37.5vw, 31.375rem);
    /* 440px - 520px */
    height: clamp(27.5rem, 40vw, 32.5rem);
    /* 16px - 20px */
    margin-right: clamp(1rem, 5vw, 1.25rem);
    /* sends it to the right in the 2nd position */
    order: 2;
    flex: none;
  }
  #sbsr-79 .cs-picture {
    margin: 0;
    height: 100%;
    flex: none;
  }
  #sbsr-79 .cs-content {
    width: 45%;
    margin: 0;
  }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #E12213;
        --primaryLight: #001F3F;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbsr-79 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* clips the red box from causing overflow issues */
        overflow: hidden;
        background-color: #1a1a1a;

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (542/16rem);
            margin-right: auto;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            color: var(--bodyTextColorWhite);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (16/16rem);
            color: var(--bodyTextColorWhite);
            opacity: .8;
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-wrapper {
            width: 95%;
            max-width: (550/16rem);
            /* 28px - 80px */
            /* pushes up and down by the same amount the decorative box overflows the wrapper */
            margin: clamp(1.75em, 7.8vw, 5em) 0;
            position: relative;
            z-index: 1;
            &:before {
                /* Red decorative box */
                content: '';
                /* make it huge so it covers everything on the left as it overflows */
                width: (800/16em);
                background: var(--primary);
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 28px - 80px */
                /* wrapped in a calc function to get a negative clamp value */
                top: ~"calc(clamp(1.75em, 7.8vw, 5em) * -1)";
                bottom: ~"calc(clamp(1.75em, 7.8vw, 5em) * -1)";
                left: (65/16em);
                z-index: -1;
            }
        }

        .cs-picture {
            width: 100%;
            margin: 0;
            position: relative;
            display: block;
            /* width divided by height */
            aspect-ratio: 312/335;
            border-radius: (16/16rem);
            position: relative;
            z-index: 1;

            &:before {
                /* Top right box */
                content: '';
                width: (160/16rem);
                /* 202px - 248px */
                height: clamp(12.625rem, 25vw, 15.5rem);
                background: #fff;
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 16px -20px */
                /* wrapped in a calc function to get a negative clamp value */
                top: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                right: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
            }

            &:after {
                /* Bottom left box */
                content: '';
                width: (160/16rem);
                /* 202px - 248px */
                height: clamp(12.625rem, 25vw, 15.5rem);
                background: #fff;
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 16px -20px */
                /* wrapped in a calc function to get a negative clamp value */
                bottom: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                left: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                z-index: -1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
                border-radius: (16/16rem);
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbsr-79 {
        .cs-container {
            max-width: (1280/16rem);
            flex-direction: row;
            justify-content: flex-end;
            /* 60px - 128px */ 
            gap: clamp(3.75rem, 9.5vw, 8rem);
        }

        .cs-wrapper {
            /* 328px - 502px */ 
            width: clamp(20.5rem, 37.5vw, 31.375rem);
            /* 440px - 520px */ 
            height: clamp(27.5rem, 40vw, 32.5rem);
            /* 16px - 20px */ 
            margin-right: clamp(1rem, 5vw, 1.25rem);
            /* sends it to the right in the 2nd position */
            order: 2;
            flex: none;
        }

        .cs-picture {
            margin: 0;
            height: 100%;
            flex: none;
        }

        .cs-content {
            width: 45%;
            margin: 0;
        }
    }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #e12213;
		--primaryLight: #001f3f;
		--secondary: #ffba43;
		--secondaryLight: #ffba43;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#sbsr-79 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		padding: var(--sectionPadding);
		/* clips the red box from causing overflow issues */
		overflow: hidden;
		background-color: #1a1a1a;

		.cs-container {
			width: 100%;
			/* changes to 1280px at tablet */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: left;
			width: 100%;
			max-width: calc(542 / 16 * 1rem);
			margin-right: auto;
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: flex-start;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-title {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			color: var(--bodyTextColorWhite);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			color: var(--bodyTextColorWhite);
			opacity: 0.8;
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-wrapper {
			width: 95%;
			max-width: calc(550 / 16 * 1rem);
			/* 28px - 80px */
			/* pushes up and down by the same amount the decorative box overflows the wrapper */
			margin: clamp(1.75em, 7.8vw, 5em) 0;
			position: relative;
			z-index: 1;
			&:before {
				/* Red decorative box */
				content: '';
				/* make it huge so it covers everything on the left as it overflows */
				width: calc(800 / 16 * 1em);
				background: var(--primary);
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 28px - 80px */
				/* wrapped in a calc function to get a negative clamp value */
				top: calc(clamp(1.75em, 7.8vw, 5em) * -1);
				bottom: calc(clamp(1.75em, 7.8vw, 5em) * -1);
				left: calc(65 / 16 * 1em);
				z-index: -1;
			}
		}

		.cs-picture {
			width: 100%;
			margin: 0;
			position: relative;
			display: block;
			/* width divided by height */
			aspect-ratio: 312/335;
			border-radius: calc(16 / 16 * 1rem);
			position: relative;
			z-index: 1;

			&:before {
				/* Top right box */
				content: '';
				width: calc(160 / 16 * 1rem);
				/* 202px - 248px */
				height: clamp(12.625rem, 25vw, 15.5rem);
				background: #fff;
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 16px -20px */
				/* wrapped in a calc function to get a negative clamp value */
				top: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				right: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
			}

			&:after {
				/* Bottom left box */
				content: '';
				width: calc(160 / 16 * 1rem);
				/* 202px - 248px */
				height: clamp(12.625rem, 25vw, 15.5rem);
				background: #fff;
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 16px -20px */
				/* wrapped in a calc function to get a negative clamp value */
				bottom: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				left: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				z-index: -1;
			}

			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				object-fit: cover;
				border-radius: calc(16 / 16 * 1rem);
			}
		}
	}
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
	#sbsr-79 {
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
			flex-direction: row;
			justify-content: flex-end;
			/* 60px - 128px */
			gap: clamp(3.75rem, 9.5vw, 8rem);
		}

		.cs-wrapper {
			/* 328px - 502px */
			width: clamp(20.5rem, 37.5vw, 31.375rem);
			/* 440px - 520px */
			height: clamp(27.5rem, 40vw, 32.5rem);
			/* 16px - 20px */
			margin-right: clamp(1rem, 5vw, 1.25rem);
			/* sends it to the right in the 2nd position */
			order: 2;
			flex: none;
		}

		.cs-picture {
			margin: 0;
			height: 100%;
			flex: none;
		}

		.cs-content {
			width: 45%;
			margin: 0;
		}
	}
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
  :root {
    /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
    --primary: #E12213;
    --primaryLight: #001F3F;
    --secondary: #FFBA43;
    --secondaryLight: #FFBA43;
    --headerColor: #1a1a1a;
    --bodyTextColor: #4E4B66;
    --bodyTextColorWhite: #FAFBFC;
    /* 13px - 16px */
    --topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
    /* 31px - 49px */
    --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
    --bodyFontSize: 1rem;
    /* 60px - 100px top and bottom */
    --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
  }
  #sbsr-79 {
    /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
    font-family: 'Roboto', 'Arial', sans-serif;
    padding: var(--sectionPadding);
    /* clips the red box from causing overflow issues */
    overflow: hidden;
    background-color: #1a1a1a;
  }
  #sbsr-79 .cs-container {
    width: 100%;
    /* changes to 1280px at tablet */
    max-width: 34.375rem;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
  }
  #sbsr-79 .cs-content {
    /* set text align to left if content needs to be left aligned */
    text-align: left;
    width: 100%;
    max-width: 33.875rem;
    margin-right: auto;
    display: flex;
    flex-direction: column;
    /* centers content horizontally, set to flex-start to left align */
    align-items: flex-start;
  }
  #sbsr-79 .cs-topper {
    font-size: var(--topperFontSize);
    line-height: 1.2em;
    text-transform: uppercase;
    text-align: inherit;
    letter-spacing: .1em;
    font-weight: 700;
    color: var(--primary);
    margin-bottom: 0.25rem;
    display: block;
  }
  #sbsr-79 .cs-title {
    font-size: var(--headerFontSize);
    font-weight: 900;
    line-height: 1.2em;
    text-align: inherit;
    max-width: 43.75rem;
    margin: 0 0 1rem 0;
    color: var(--headerColor);
    position: relative;
  }
  #sbsr-79 .cs-text {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    text-align: inherit;
    width: 100%;
    max-width: 40.625rem;
    margin: 0;
    color: var(--bodyTextColor);
  }
  #sbsr-79 .cs-title {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    color: var(--bodyTextColorWhite);
  }
  #sbsr-79 .cs-text {
    /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 1rem;
    color: var(--bodyTextColorWhite);
    opacity: .8;
  }
  #sbsr-79 .cs-text:last-of-type {
    margin-bottom: 2rem;
  }
  #sbsr-79 .cs-button-solid {
    font-size: 1rem;
    /* 46px - 56px */
    line-height: clamp(2.875rem, 5.5vw, 3.5rem);
    text-decoration: none;
    font-weight: 700;
    text-align: center;
    margin: 0;
    color: #fff;
    min-width: 9.375rem;
    padding: 0 1.5rem;
    background-color: var(--primary);
    border-radius: 0.25rem;
    display: inline-block;
    position: relative;
    z-index: 1;
    /* prevents padding from adding to the width */
    box-sizing: border-box;
  }
  #sbsr-79 .cs-button-solid:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 0%;
    background: #000;
    opacity: 1;
    top: 0;
    left: 0;
    z-index: -1;
    border-radius: 0.25rem;
    transition: width .3s;
  }
  #sbsr-79 .cs-button-solid:hover:before {
    width: 100%;
  }
  #sbsr-79 .cs-wrapper {
    width: 95%;
    max-width: 34.375rem;
    /* 28px - 80px */
    /* pushes up and down by the same amount the decorative box overflows the wrapper */
    margin: clamp(1.75em, 7.8vw, 5em) 0;
    position: relative;
    z-index: 1;
  }
  #sbsr-79 .cs-wrapper:before {
    /* Red decorative box */
    content: '';
    /* make it huge so it covers everything on the left as it overflows */
    width: 50em;
    background: var(--primary);
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 28px - 80px */
    /* wrapped in a calc function to get a negative clamp value */
    top: calc(clamp(1.75em, 7.8vw, 5em) * -1);
    bottom: calc(clamp(1.75em, 7.8vw, 5em) * -1);
    left: 4.0625em;
    z-index: -1;
  }
  #sbsr-79 .cs-picture {
    width: 100%;
    margin: 0;
    display: block;
    /* width divided by height */
    aspect-ratio: 0.93134328;
    border-radius: 1rem;
    position: relative;
    z-index: 1;
  }
  #sbsr-79 .cs-picture:before {
    /* Top right box */
    content: '';
    width: 10rem;
    /* 202px - 248px */
    height: clamp(12.625rem, 25vw, 15.5rem);
    background: #fff;
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 16px -20px */
    /* wrapped in a calc function to get a negative clamp value */
    top: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    right: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
  }
  #sbsr-79 .cs-picture:after {
    /* Bottom left box */
    content: '';
    width: 10rem;
    /* 202px - 248px */
    height: clamp(12.625rem, 25vw, 15.5rem);
    background: #fff;
    opacity: 1;
    border-radius: 1rem;
    position: absolute;
    display: block;
    /* 16px -20px */
    /* wrapped in a calc function to get a negative clamp value */
    bottom: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    left: calc(clamp(.5rem, 2.09vw, 1.25rem) * -1);
    z-index: -1;
  }
  #sbsr-79 .cs-picture img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    object-fit: cover;
    border-radius: 1rem;
  }
}
/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
  #sbsr-79 .cs-container {
    max-width: 80rem;
    flex-direction: row;
    justify-content: flex-end;
    /* 60px - 128px */
    gap: clamp(3.75rem, 9.5vw, 8rem);
  }
  #sbsr-79 .cs-wrapper {
    /* 328px - 502px */
    width: clamp(20.5rem, 37.5vw, 31.375rem);
    /* 440px - 520px */
    height: clamp(27.5rem, 40vw, 32.5rem);
    /* 16px - 20px */
    margin-right: clamp(1rem, 5vw, 1.25rem);
    /* sends it to the right in the 2nd position */
    order: 2;
    flex: none;
  }
  #sbsr-79 .cs-picture {
    margin: 0;
    height: 100%;
    flex: none;
  }
  #sbsr-79 .cs-content {
    width: 45%;
    margin: 0;
  }
}
/* Dark Mode */
@media only screen and (min-width: 0rem) {
  body.dark-mode #sbsr-79 .cs-wrapper:before {
    background-color: rgba(0, 0, 0, 0.2);
  }
  body.dark-mode #sbsr-79 .cs-picture:before,
  body.dark-mode #sbsr-79 .cs-picture:after {
    background: var(--accent);
  }
  body.dark-mode #sbsr-79 .cs-title,
  body.dark-mode #sbsr-79 .cs-text {
    color: var(--bodyTextColorWhite);
  }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    :root {
        /* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
        --primary: #E12213;
        --primaryLight: #001F3F;
        --secondary: #FFBA43;
        --secondaryLight: #FFBA43;
        --headerColor: #1a1a1a;
        --bodyTextColor: #4E4B66;
		--bodyTextColorWhite: #FAFBFC;

        /* 13px - 16px */
        --topperFontSize: clamp(.8125rem, 1.6vw, 1rem);
        /* 31px - 49px */
        --headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
        --bodyFontSize: 1rem;

        /* 60px - 100px top and bottom */
        --sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
    }

    #sbsr-79 {
        /* remove the font family so the Stitch inherits the fonts from your global stylesheet */
        font-family: 'Roboto', 'Arial', sans-serif;
        padding: var(--sectionPadding);
        /* clips the red box from causing overflow issues */
        overflow: hidden;
        background-color: #1a1a1a;

        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: (550/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: (542/16rem);
            margin-right: auto;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: (4/16rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: (700/16rem);
            margin: 0 0 (16/16rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: (650/16rem);
            margin: 0;
            color: var(--bodyTextColor);
        }

        .cs-title {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            color: var(--bodyTextColorWhite);
        }

        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: (16/16rem);
            color: var(--bodyTextColorWhite);
            opacity: .8;
            &:last-of-type {
                margin-bottom: (32/16rem);
            }
        }

        .cs-button-solid {
            font-size: (16/16rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
	    	font-weight: 700;
	        text-align: center;
            margin: 0;
            color: #fff;
            min-width: (150/16rem);
            padding: 0 (24/16rem);
            background-color: var(--primary);
            border-radius: (4/16rem);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;

            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                border-radius: (4/16rem);
                transition: width .3s;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }

        .cs-wrapper {
            width: 95%;
            max-width: (550/16rem);
            /* 28px - 80px */
            /* pushes up and down by the same amount the decorative box overflows the wrapper */
            margin: clamp(1.75em, 7.8vw, 5em) 0;
            position: relative;
            z-index: 1;
            &:before {
                /* Red decorative box */
                content: '';
                /* make it huge so it covers everything on the left as it overflows */
                width: (800/16em);
                background: var(--primary);
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 28px - 80px */
                /* wrapped in a calc function to get a negative clamp value */
                top: ~"calc(clamp(1.75em, 7.8vw, 5em) * -1)";
                bottom: ~"calc(clamp(1.75em, 7.8vw, 5em) * -1)";
                left: (65/16em);
                z-index: -1;
            }
        }

        .cs-picture {
            width: 100%;
            margin: 0;
            position: relative;
            display: block;
            /* width divided by height */
            aspect-ratio: 312/335;
            border-radius: (16/16rem);
            position: relative;
            z-index: 1;

            &:before {
                /* Top right box */
                content: '';
                width: (160/16rem);
                /* 202px - 248px */
                height: clamp(12.625rem, 25vw, 15.5rem);
                background: #fff;
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 16px -20px */
                /* wrapped in a calc function to get a negative clamp value */
                top: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                right: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
            }

            &:after {
                /* Bottom left box */
                content: '';
                width: (160/16rem);
                /* 202px - 248px */
                height: clamp(12.625rem, 25vw, 15.5rem);
                background: #fff;
                opacity: 1;
                border-radius: (16/16rem);
                position: absolute;
                display: block;
                /* 16px -20px */
                /* wrapped in a calc function to get a negative clamp value */
                bottom: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                left: ~"calc(clamp(.5rem, 2.09vw, 1.25rem) * -1)";
                z-index: -1;
            }

            img {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                object-fit: cover;
                border-radius: (16/16rem);
            }
        }
    }
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
    #sbsr-79 {
        .cs-container {
            max-width: (1280/16rem);
            flex-direction: row;
            justify-content: flex-end;
            /* 60px - 128px */ 
            gap: clamp(3.75rem, 9.5vw, 8rem);
        }

        .cs-wrapper {
            /* 328px - 502px */ 
            width: clamp(20.5rem, 37.5vw, 31.375rem);
            /* 440px - 520px */ 
            height: clamp(27.5rem, 40vw, 32.5rem);
            /* 16px - 20px */ 
            margin-right: clamp(1rem, 5vw, 1.25rem);
            /* sends it to the right in the 2nd position */
            order: 2;
            flex: none;
        }

        .cs-picture {
            margin: 0;
            height: 100%;
            flex: none;
        }

        .cs-content {
            width: 45%;
            margin: 0;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #sbsr-79 {
            .cs-wrapper {
                &:before {
                    background-color: rgba(0, 0, 0, .2);
                }
            }
            
            .cs-picture {
                &:before, &:after {
                    background: var(--accent);
                }
            }

            .cs-title, .cs-text {
                color: var(--bodyTextColorWhite);
            }
        }
    }
}
                                
/*-- -------------------------- -->
<---   Side By Side Reverse     -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
	:root {
		/* remove this whole :root and put in your global css file that's shared on all pages, then just remove this section from all other Stitches you add later, only need this once in your global stylesheet */
		--primary: #e12213;
		--primaryLight: #001f3f;
		--secondary: #ffba43;
		--secondaryLight: #ffba43;
		--headerColor: #1a1a1a;
		--bodyTextColor: #4e4b66;
		--bodyTextColorWhite: #fafbfc;

		/* 13px - 16px */
		--topperFontSize: clamp(0.8125rem, 1.6vw, 1rem);
		/* 31px - 49px */
		--headerFontSize: clamp(1.9375rem, 3.9vw, 3.0625rem);
		--bodyFontSize: 1rem;

		/* 60px - 100px top and bottom */
		--sectionPadding: clamp(3.75rem, 7.82vw, 6.25rem) 1rem;
	}

	#sbsr-79 {
		/* remove the font family so the Stitch inherits the fonts from your global stylesheet */
		font-family: 'Roboto', 'Arial', sans-serif;
		padding: var(--sectionPadding);
		/* clips the red box from causing overflow issues */
		overflow: hidden;
		background-color: #1a1a1a;

		.cs-container {
			width: 100%;
			/* changes to 1280px at tablet */
			max-width: calc(550 / 16 * 1rem);
			margin: auto;
			display: flex;
			flex-direction: column;
			align-items: center;
			/* 48px - 64px */
			gap: clamp(3rem, 6vw, 4rem);
		}

		.cs-content {
			/* set text align to left if content needs to be left aligned */
			text-align: left;
			width: 100%;
			max-width: calc(542 / 16 * 1rem);
			margin-right: auto;
			display: flex;
			flex-direction: column;
			/* centers content horizontally, set to flex-start to left align */
			align-items: flex-start;
		}

		.cs-topper {
			font-size: var(--topperFontSize);
			line-height: 1.2em;
			text-transform: uppercase;
			text-align: inherit;
			letter-spacing: 0.1em;
			font-weight: 700;
			color: var(--primary);
			margin-bottom: calc(4 / 16 * 1rem);
			display: block;
		}

		.cs-title {
			font-size: var(--headerFontSize);
			font-weight: 900;
			line-height: 1.2em;
			text-align: inherit;
			max-width: calc(700 / 16 * 1rem);
			margin: 0 0 calc(16 / 16 * 1rem) 0;
			color: var(--headerColor);
			position: relative;
		}

		.cs-text {
			font-size: var(--bodyFontSize);
			line-height: 1.5em;
			text-align: inherit;
			width: 100%;
			max-width: calc(650 / 16 * 1rem);
			margin: 0;
			color: var(--bodyTextColor);
		}

		.cs-title {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			color: var(--bodyTextColorWhite);
		}

		.cs-text {
			/* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
			margin-bottom: calc(16 / 16 * 1rem);
			color: var(--bodyTextColorWhite);
			opacity: 0.8;
			&:last-of-type {
				margin-bottom: calc(32 / 16 * 1rem);
			}
		}

		.cs-button-solid {
			font-size: calc(16 / 16 * 1rem);
			/* 46px - 56px */
			line-height: clamp(2.875rem, 5.5vw, 3.5rem);
			text-decoration: none;
			font-weight: 700;
			text-align: center;
			margin: 0;
			color: #fff;
			min-width: calc(150 / 16 * 1rem);
			padding: 0 calc(24 / 16 * 1rem);
			background-color: var(--primary);
			border-radius: calc(4 / 16 * 1rem);
			display: inline-block;
			position: relative;
			z-index: 1;
			/* prevents padding from adding to the width */
			box-sizing: border-box;

			&:before {
				content: '';
				position: absolute;
				height: 100%;
				width: 0%;
				background: #000;
				opacity: 1;
				top: 0;
				left: 0;
				z-index: -1;
				border-radius: calc(4 / 16 * 1rem);
				transition: width 0.3s;
			}

			&:hover {
				&:before {
					width: 100%;
				}
			}
		}

		.cs-wrapper {
			width: 95%;
			max-width: calc(550 / 16 * 1rem);
			/* 28px - 80px */
			/* pushes up and down by the same amount the decorative box overflows the wrapper */
			margin: clamp(1.75em, 7.8vw, 5em) 0;
			position: relative;
			z-index: 1;
			&:before {
				/* Red decorative box */
				content: '';
				/* make it huge so it covers everything on the left as it overflows */
				width: calc(800 / 16 * 1em);
				background: var(--primary);
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 28px - 80px */
				/* wrapped in a calc function to get a negative clamp value */
				top: calc(clamp(1.75em, 7.8vw, 5em) * -1);
				bottom: calc(clamp(1.75em, 7.8vw, 5em) * -1);
				left: calc(65 / 16 * 1em);
				z-index: -1;
			}
		}

		.cs-picture {
			width: 100%;
			margin: 0;
			position: relative;
			display: block;
			/* width divided by height */
			aspect-ratio: 312/335;
			border-radius: calc(16 / 16 * 1rem);
			position: relative;
			z-index: 1;

			&:before {
				/* Top right box */
				content: '';
				width: calc(160 / 16 * 1rem);
				/* 202px - 248px */
				height: clamp(12.625rem, 25vw, 15.5rem);
				background: #fff;
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 16px -20px */
				/* wrapped in a calc function to get a negative clamp value */
				top: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				right: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
			}

			&:after {
				/* Bottom left box */
				content: '';
				width: calc(160 / 16 * 1rem);
				/* 202px - 248px */
				height: clamp(12.625rem, 25vw, 15.5rem);
				background: #fff;
				opacity: 1;
				border-radius: calc(16 / 16 * 1rem);
				position: absolute;
				display: block;
				/* 16px -20px */
				/* wrapped in a calc function to get a negative clamp value */
				bottom: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				left: calc(clamp(0.5rem, 2.09vw, 1.25rem) * -1);
				z-index: -1;
			}

			img {
				position: absolute;
				top: 0;
				left: 0;
				height: 100%;
				width: 100%;
				object-fit: cover;
				border-radius: calc(16 / 16 * 1rem);
			}
		}
	}
}

/* Tablet - 768px */
@media only screen and (min-width: 48rem) {
	#sbsr-79 {
		.cs-container {
			max-width: calc(1280 / 16 * 1rem);
			flex-direction: row;
			justify-content: flex-end;
			/* 60px - 128px */
			gap: clamp(3.75rem, 9.5vw, 8rem);
		}

		.cs-wrapper {
			/* 328px - 502px */
			width: clamp(20.5rem, 37.5vw, 31.375rem);
			/* 440px - 520px */
			height: clamp(27.5rem, 40vw, 32.5rem);
			/* 16px - 20px */
			margin-right: clamp(1rem, 5vw, 1.25rem);
			/* sends it to the right in the 2nd position */
			order: 2;
			flex: none;
		}

		.cs-picture {
			margin: 0;
			height: 100%;
			flex: none;
		}

		.cs-content {
			width: 45%;
			margin: 0;
		}
	}
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
	body.dark-mode {
		#sbsr-79 {
			.cs-wrapper {
				&:before {
					background-color: rgba(0, 0, 0, 0.2);
				}
			}

			.cs-picture {
				&:before,
				&:after {
					background: var(--accent);
				}
			}

			.cs-title,
			.cs-text {
				color: var(--bodyTextColorWhite);
			}
		}
	}
}
                                